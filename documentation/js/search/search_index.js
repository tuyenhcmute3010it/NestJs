var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.196,1,3.039]],["body/controllers/AppController.html",[0,2.048,1,5.205,2,1.697,3,0.163,4,0.145,5,0.11,6,5.161,7,0.294,8,0.012,9,0.907,10,4.903,11,5.161,12,4.634,13,3.232,14,4.4,15,5.899,16,0.163,17,0.274,18,2.35,19,3.399,20,2.435,21,0.01,22,0.01]],["title/modules/AppModule.html",[23,1.026,24,3.039]],["body/modules/AppModule.html",[1,4.2,2,1.4,3,0.092,4,0.082,5,0.062,7,0.309,8,0.012,9,0.514,10,4.492,11,2.922,12,3.826,13,1.83,16,0.092,17,0.155,21,0.007,22,0.007,23,1.418,24,6.216,25,1.378,26,1.429,27,1.542,28,1.542,29,1.429,30,2.654,31,1.542,32,2.922,33,2.922,34,2.922,35,4.779,36,4.779,37,4.779,38,4.779,39,4.779,40,4.779,41,4.492,42,4.779,43,4.779,44,4.492,45,4.779,46,4.492,47,2.249,48,1.542,49,1.484,50,3.339,51,2.654,52,3.339,53,1.674,54,0.903,55,3.859,56,3.339,57,3.339,58,4.869,59,2.277,60,3.559,61,3.339,62,2.922,63,3.339,64,1.605,65,1.125,66,1.605,67,0.824,68,3.339,69,3.339,70,3.339,71,3.339,72,3.339,73,3.339,74,3.339,75,3.339,76,3.339,77,3.339,78,2.647,79,2.922,80,3.339,81,2.647,82,3.339,83,3.339,84,3.339,85,3.339,86,2.922,87,1.378,88,3.339,89,3.339,90,3.339,91,2.922,92,2.668,93,3.339,94,1.429,95,3.339,96,2.647,97,1.378,98,3.339,99,3.339,100,3.339,101,4.869,102,3.339,103,0.876,104,2.647,105,3.339,106,3.339,107,1.285,108,3.339,109,2.922]],["title/injectables/AppService.html",[10,2.664,110,0.827]],["body/injectables/AppService.html",[3,0.166,4,0.148,5,0.111,7,0.222,8,0.012,9,0.923,10,4.612,16,0.166,17,0.279,21,0.01,22,0.01,103,1.574,110,1.432,111,2.232,112,5.251,113,0.642,114,2.007,115,7.991,116,0.804,117,6.002,118,1.674,119,1.034,120,6.002,121,6.002,122,6.002,123,6.002,124,6.002]],["title/controllers/AuthController.html",[0,1.196,125,3.039]],["body/controllers/AuthController.html",[0,0.886,2,0.886,3,0.085,4,0.076,5,0.057,7,0.279,8,0.012,9,0.474,14,3.152,16,0.085,17,0.143,18,1.227,19,2.038,21,0.006,22,0.006,62,2.694,79,2.694,81,2.44,86,2.694,97,2.262,103,1.849,107,2.108,113,0.329,114,1.279,116,0.945,118,1.967,125,3.352,126,2.694,127,1.48,128,2.694,129,4.586,130,4.586,131,4.586,132,4.586,133,5.481,134,5.481,135,3.635,136,3.079,137,2.536,138,1.637,139,3.079,140,2.291,141,4.013,142,3.079,143,2.159,144,0.847,145,0.849,146,2.028,147,1.612,148,3.079,149,3.079,150,3.079,151,5.297,152,3.079,153,4.586,154,3.079,155,3.079,156,5.296,157,3.079,158,3.079,159,3.079,160,3.079,161,3.079,162,3.079,163,3.079,164,3.079,165,3.079,166,6.072,167,3.079,168,4.013,169,3.635,170,3.079,171,4.439,172,2.694,173,3.73,174,3.079,175,1.649,176,3.079,177,3.079,178,1.543,179,1.48,180,3.079,181,5.313,182,2.694,183,3.916,184,1.48,185,1.318,186,2.251,187,2.44,188,2.44,189,1.543,190,2.779,191,1.866,192,1.973,193,1.771,194,1.318,195,2.513,196,2.44,197,3.079,198,4.586,199,1.612,200,0.973,201,3.079,202,3.079,203,2.44,204,3.079,205,3.079,206,3.079,207,3.079,208,2.694,209,3.079,210,3.079,211,5.481,212,3.079,213,4.586,214,3.079,215,3.079,216,4.013,217,3.079,218,3.079,219,3.079,220,3.079,221,3.079,222,3.079,223,3.127,224,3.079,225,1.404,226,2.44,227,1.422,228,3.079,229,2.694,230,3.079,231,3.079,232,2.251,233,3.079,234,3.079,235,3.079,236,3.079,237,3.079]],["title/modules/AuthModule.html",[23,1.026,35,2.834]],["body/modules/AuthModule.html",[2,1.648,3,0.116,4,0.103,5,0.078,7,0.306,8,0.012,9,0.647,12,4.239,13,2.306,14,4.72,16,0.116,17,0.195,21,0.008,22,0.008,23,1.608,25,1.737,26,1.801,27,1.944,28,1.944,29,1.801,30,3.01,31,3.01,35,5.694,44,4.841,46,4.841,47,2.647,48,1.944,49,1.87,51,3.01,53,2.109,54,1.138,55,4.542,96,3.335,97,1.737,104,3.335,125,4.764,140,1.21,144,0.505,188,3.335,238,3.681,239,4.208,240,3.681,241,3.681,242,5.15,243,5.15,244,4.208,245,4.208,246,5.731,247,2.697,248,4.208,249,4.208,250,3.335,251,4.208,252,4.542,253,4.208,254,3.673,255,3.076,256,4.208,257,4.208,258,4.208,259,4.208,260,4.208,261,4.208,262,3.681,263,4.208,264,3.681,265,2.203,266,3.335,267,1.676]],["title/injectables/AuthService.html",[14,2.391,110,0.827]],["body/injectables/AuthService.html",[3,0.065,4,0.058,5,0.044,7,0.27,8,0.012,9,0.362,12,3.882,13,1.291,14,2.147,16,0.065,17,0.109,18,1.487,19,2.555,21,0.005,22,0.005,54,0.637,64,1.132,65,0.793,66,1.132,67,0.581,97,2.953,103,1.743,107,1.783,110,0.743,111,0.876,113,0.252,114,1.041,116,0.858,118,1.293,119,1.028,135,2.958,137,2.067,140,2.197,143,1.614,144,0.874,145,0.657,146,1.517,147,2.76,156,4.664,168,4.614,169,4.847,173,2.89,175,1.342,191,1.427,192,1.51,193,1.355,194,1.008,195,2.89,196,1.867,203,3.674,208,5.029,225,2.316,226,2.958,227,3.07,232,5.002,250,1.867,252,2.958,255,1.722,262,2.061,264,4.056,268,2.061,269,0.949,270,4.636,271,4.636,272,4.636,273,3.733,274,2.356,275,3.351,276,6.408,277,3.674,278,2.76,279,2.356,280,3.733,281,2.356,282,3.733,283,2.356,284,2.356,285,3.733,286,5.029,287,2.356,288,2.261,289,2.958,290,2.971,291,2.971,292,2.356,293,2.356,294,2.356,295,2.261,296,1.867,297,1.606,298,1.233,299,1.867,300,1.606,301,1.867,302,2.356,303,2.356,304,2.061,305,1.722,306,2.356,307,2.356,308,2.356,309,3.733,310,2.356,311,3.733,312,2.728,313,3.733,314,2.016,315,3.733,316,3.733,317,2.356,318,3.009,319,3.266,320,1.132,321,2.147,322,2.061,323,1.556,324,2.199,325,4.056,326,3.733,327,3.733,328,3.733,329,3.266,330,3.733,331,1.783,332,3.733,333,3.266,334,4.636,335,3.733,336,3.733,337,3.733,338,3.733,339,4.636,340,3.733,341,4.636,342,2.356,343,2.356,344,1.008,345,2.356,346,3.733,347,3.733,348,1.722,349,2.356,350,2.356,351,2.356,352,3.733,353,2.045,354,2.958,355,3.266,356,2.728,357,2.356,358,2.356,359,2.061,360,2.356,361,2.356,362,1.355,363,2.356]],["title/controllers/CompaniesController.html",[0,1.196,364,3.039]],["body/controllers/CompaniesController.html",[0,1.051,2,1.051,3,0.101,4,0.09,5,0.068,7,0.276,8,0.012,9,0.562,16,0.101,17,0.17,20,1.508,21,0.007,22,0.007,65,1.231,94,2.818,103,1.824,113,0.391,114,1.449,116,0.932,118,1.94,119,1.194,127,1.757,137,2.819,138,1.614,140,2.368,143,2.129,144,0.835,145,0.867,146,2,151,2.671,178,2.604,179,2.906,183,3.477,184,1.757,185,1.564,194,1.564,199,1.913,200,1.154,331,2.325,364,3.797,365,3.197,366,3.197,367,1.405,368,2.495,369,2.144,370,2.144,371,3.197,372,4.631,373,3.654,374,1.624,375,2.925,376,3.197,377,4.545,378,1.868,379,3.542,380,3.654,381,2.309,382,1.508,383,3.654,384,3.654,385,2.283,386,1.508,387,2.988,388,3.654,389,1.757,390,5.18,391,3.329,392,3.654,393,1.831,394,1.913,395,2.224,396,3.874,397,3.197,398,1.508,399,4.117,400,1.508,401,3.654,402,3.654,403,1.688,404,2.671,405,3.654,406,2.214,407,2.214,408,2.214,409,3.654,410,2.102,411,2.102,412,3.654,413,2.491,414,3.654,415,2.102,416,3.654]],["title/modules/CompaniesModule.html",[23,1.026,36,2.834]],["body/modules/CompaniesModule.html",[2,1.944,3,0.15,4,0.133,5,0.101,7,0.294,8,0.012,9,0.833,16,0.15,17,0.252,21,0.009,22,0.009,23,1.817,25,2.236,26,2.319,27,2.502,28,2.502,29,2.319,30,3.402,31,2.502,36,5.519,47,3.121,48,2.502,49,2.407,51,2.502,53,2.715,54,1.465,144,0.651,265,2.835,267,2.158,364,5.384,378,1.948,396,5.188,397,4.739,417,4.739,418,4.739,419,5.417,420,5.417,421,4.94,422,4.739,423,4.739]],["title/injectables/CompaniesService.html",[110,0.827,396,2.664]],["body/injectables/CompaniesService.html",[3,0.082,4,0.073,5,0.055,7,0.277,8,0.012,9,0.457,16,0.082,17,0.138,18,1.779,19,1.321,21,0.006,22,0.006,54,0.804,64,1.429,65,1.807,66,1.429,67,1.324,92,1.629,94,2.983,97,2.773,103,1.762,110,0.889,111,1.105,113,0.318,114,1.246,116,0.9,118,1.784,119,1.105,137,2.687,140,2.11,143,2.057,144,0.807,145,0.837,146,1.932,147,2.338,151,2.173,171,2.173,175,1.069,193,1.71,194,1.272,225,1.827,227,2.478,278,3.123,295,1.801,298,1.556,314,2.005,321,2.569,323,1.365,331,1.718,353,1.629,362,3.086,367,1.208,368,1.844,369,1.844,370,1.844,371,3.908,372,4.306,374,1.985,375,2.385,378,1.93,381,2.385,382,1.844,385,2.265,386,1.844,389,2.147,390,4.889,395,2.297,396,2.863,398,1.227,399,3.54,400,1.227,422,2.601,424,2.601,425,2.972,426,2.972,427,4.467,428,2.972,429,2.585,430,2.972,431,2.972,432,2.972,433,2.972,434,2.356,435,1.801,436,1.71,437,1.71,438,2.972,439,2.972,440,1.321,441,3.251,442,1.801,443,1.801,444,1.801,445,1.801,446,1.801,447,1.801,448,1.801,449,1.801,450,1.556,451,2.706,452,2.706,453,2.972,454,2.706,455,1.801,456,2.972,457,1.801,458,1.801,459,1.801,460,1.801,461,1.801,462,1.801,463,1.801,464,1.801,465,2.706,466,1.801,467,1.801,468,1.801,469,3.615,470,1.801,471,2.706,472,2.706,473,1.801,474,1.801,475,2.706,476,1.801,477,1.801,478,1.801,479,1.801,480,1.801,481,1.801,482,1.801,483,1.801,484,2.863,485,2.972,486,2.863,487,2.972,488,4.467,489,1.184,490,1.373,491,2.972]],["title/classes/Company.html",[17,0.193,378,1.495]],["body/classes/Company.html",[3,0.11,4,0.098,5,0.074,7,0.204,8,0.012,16,0.175,17,0.185,21,0.008,22,0.008,54,1.074,67,1.359,107,1.528,113,0.425,116,1.08,119,1.158,138,1.87,144,0.76,145,1.046,225,1.216,267,2.194,269,1.401,314,1.819,323,1.609,344,2.707,378,1.981,421,2.903,434,3.148,440,2.81,489,2.519,490,2.921,492,0.95,493,2.903,494,3.637,495,3.637,496,2.707,497,3.637,498,4.311,499,3.04,500,5.119,501,3.972,502,3.428,503,3.972,504,3.831,505,4.053,506,4.497,507,3.972,508,3.972,509,3.972,510,3.972,511,2.761,512,3.972,513,3.972,514,3.972,515,3.972,516,3.972,517,2.406,518,3.168,519,2.406,520,2.707,521,3.475]],["title/classes/Company-1.html",[17,0.161,378,1.247,450,1.815]],["body/classes/Company-1.html",[3,0.119,4,0.106,5,0.08,7,0.244,8,0.012,16,0.119,17,0.328,21,0.008,22,0.008,67,1.434,87,3.343,113,0.46,116,0.779,119,1.117,138,1.349,144,0.886,145,0.88,269,1.478,314,1.895,378,2.651,429,2.236,492,1.028,496,3.021,502,2.685,511,2.153,520,2.488,522,5.22,523,3.14,524,3.336,525,4.296,526,4.296,527,2.249,528,1.909,529,3.725,530,3.725,531,2.153,532,3.185,533,1.597,534,2.603,535,3.116,536,3.343,537,3.467,538,3.467,539,3.725,540,4.248,541,4.248,542,4.606,543,4.606,544,3.404,545,3.404,546,3.725]],["title/classes/Company-2.html",[17,0.161,301,2.747,378,1.247]],["body/classes/Company-2.html",[3,0.096,4,0.085,5,0.064,7,0.238,8,0.012,16,0.162,17,0.33,20,2.061,21,0.007,22,0.007,67,1.232,87,3.328,113,0.37,116,0.669,119,1.158,138,1.159,144,0.878,145,0.884,173,1.894,189,1.733,190,2.095,191,3.551,200,1.092,269,1.27,288,3.025,314,1.686,320,3.41,323,1.804,324,2.448,378,2.692,385,1.092,429,2.469,492,0.827,494,3.692,496,2.137,520,2.137,524,3.325,527,1.81,528,2.604,529,3.756,530,3.756,531,2.937,532,3.211,533,1.286,535,3.159,536,3.371,537,3.451,538,3.451,547,2.095,548,3.457,549,3.457,550,4.284,551,2.527,552,2.872,553,3.404,554,2.872,555,2.872,556,4.114,557,4.114,558,2.095,559,3.65,560,2.527,561,2.527]],["title/classes/CreateCompanyDto.html",[17,0.193,372,2.664]],["body/classes/CreateCompanyDto.html",[3,0.132,4,0.117,5,0.089,7,0.177,8,0.012,16,0.132,17,0.29,21,0.009,22,0.009,87,3.34,113,0.511,116,0.986,119,1.163,138,1.708,144,0.917,145,0.918,269,1.586,372,3.996,492,1.143,494,4.393,496,3.269,498,5.207,524,3.042,528,2.122,531,2.393,533,1.775,535,2.832,536,3.34,537,3.464,538,3.464,562,6.681,563,3.784,564,3.853,565,4.775,566,4.775,567,4.775,568,4.775]],["title/classes/CreateFileDto.html",[17,0.193,569,2.664]],["body/classes/CreateFileDto.html",[3,0.181,4,0.161,5,0.121,8,0.011,16,0.181,17,0.304,21,0.01,22,0.01,492,1.564,569,4.849,570,5.719,571,5.18]],["title/classes/CreateJobDto.html",[17,0.193,534,2.519]],["body/classes/CreateJobDto.html",[3,0.091,4,0.081,5,0.061,7,0.211,8,0.012,16,0.091,17,0.291,21,0.007,22,0.007,67,1.184,87,3.41,113,0.35,116,1.039,119,1.114,138,1.8,144,0.836,145,0.987,269,1.221,314,0.942,378,2.586,429,2.407,492,0.784,496,3.221,502,2.89,511,2.406,520,1.402,522,6.216,523,2.394,524,3.155,527,1.715,528,1.456,529,3.077,530,3.077,531,1.642,532,2.63,533,1.218,534,2.908,535,2.943,536,3.41,537,3.537,538,3.537,539,4.269,540,4.869,541,4.869,542,5.279,543,5.279,544,4.503,545,4.503,546,4.269,564,4.004,572,2.596,573,3.276,574,3.276,575,3.276,576,3.276,577,3.276,578,3.276,579,3.276,580,3.276,581,3.276,582,3.276,583,3.276]],["title/classes/CreatePermissionDto.html",[17,0.193,584,2.664]],["body/classes/CreatePermissionDto.html",[3,0.132,4,0.117,5,0.089,7,0.177,8,0.012,16,0.132,17,0.29,21,0.009,22,0.009,23,1.884,87,3.34,113,0.511,116,0.986,119,1.163,138,1.708,144,0.917,145,0.918,269,1.586,492,1.143,524,3.042,528,2.122,531,2.393,533,1.775,535,2.832,536,3.34,537,3.464,538,3.464,564,3.853,584,3.996,585,6.681,586,3.784,587,4.894,588,5.207,589,4.775,590,4.775,591,4.775,592,4.775]],["title/classes/CreateResumeCvDto.html",[17,0.193,593,2.664]],["body/classes/CreateResumeCvDto.html",[3,0.116,4,0.103,5,0.078,7,0.212,8,0.012,16,0.158,17,0.302,21,0.008,22,0.008,67,1.412,87,3.328,113,0.449,116,0.872,119,1.051,138,1.511,145,0.812,269,1.456,323,1.456,385,2.209,492,1.005,520,3.307,524,3.212,533,1.561,535,3.132,536,3.386,537,3.512,538,3.512,552,3.745,558,4.236,564,3.408,593,3.668,594,5.541,595,2.691,596,5.828,597,5.828,598,6.123,599,5.007,600,4.199,601,4.199,602,4.199,603,2.301,604,4.183,605,3.136]],["title/classes/CreateResumeDto.html",[17,0.193,603,2.278]],["body/classes/CreateResumeDto.html",[3,0.107,4,0.095,5,0.072,7,0.2,8,0.012,16,0.149,17,0.29,21,0.007,22,0.007,67,1.334,87,3.407,113,0.414,116,0.986,119,1.086,138,1.708,145,0.917,269,1.375,323,1.807,385,1.708,492,0.925,520,3.3,524,3.16,533,1.438,535,3.085,536,3.407,537,3.534,538,3.534,552,3.586,558,3.276,564,3.853,593,2.479,594,5.987,595,2.479,596,5.634,597,5.634,598,5.987,603,2.963,604,5.192,605,3.892,606,3.867,607,3.867,608,3.867,609,3.867,610,3.867,611,3.384]],["title/classes/CreateRoleDto.html",[17,0.193,612,2.664]],["body/classes/CreateRoleDto.html",[3,0.121,4,0.107,5,0.081,7,0.218,8,0.012,16,0.121,17,0.273,21,0.008,22,0.008,67,1.448,87,3.151,107,2.258,113,0.466,116,0.951,119,1.02,138,1.648,144,0.89,145,0.952,269,1.493,291,3.762,318,3.879,385,1.377,492,1.043,496,3.172,506,3.556,511,3.558,520,2.513,524,2.952,533,1.621,535,3.051,536,3.274,537,3.395,538,3.395,546,5,552,3.376,558,3.556,564,3.717,612,3.762,613,6.484,614,3.455,615,4.36,616,4.36,617,4.36,618,4.36,619,4.36,620,6.637,621,3.039,622,4.36,623,4.002,624,4.36,625,4.002,626,5.136]],["title/classes/CreateSubscriberDto.html",[17,0.193,627,2.664]],["body/classes/CreateSubscriberDto.html",[3,0.13,4,0.116,5,0.087,7,0.229,8,0.012,16,0.13,17,0.287,21,0.009,22,0.009,67,1.522,87,3.218,113,0.503,116,0.923,119,1.12,138,1.599,144,0.913,145,0.859,269,1.569,300,4.207,323,1.933,492,1.124,496,2.641,524,2.914,528,2.742,533,1.747,535,2.923,536,3.328,537,3.452,538,3.452,539,5.093,552,2.702,554,3.549,555,3.549,564,3.606,623,4.207,625,4.207,626,4.111,627,3.954,628,6.4,629,3.723,630,4.698,631,4.698,632,4.698,633,4.111,634,6.17,635,4.698]],["title/classes/CreateUserDto.html",[17,0.193,189,2.083]],["body/classes/CreateUserDto.html",[3,0.081,4,0.072,5,0.054,7,0.22,8,0.012,16,0.147,17,0.31,20,1.824,21,0.006,22,0.006,67,1.09,87,3.376,113,0.313,116,0.957,119,1.151,138,1.657,144,0.858,145,0.955,173,1.605,189,2.214,190,1.775,191,4.426,200,0.926,269,1.124,288,2.677,314,0.843,320,3.512,323,1.894,324,2.567,378,2.677,385,0.926,429,2.668,492,0.701,494,3.989,496,1.891,520,1.254,524,3.227,527,1.534,528,2.632,529,3.409,530,3.409,531,2.666,532,2.915,533,1.089,535,3.1,536,3.414,537,3.501,538,3.501,547,1.775,550,3.888,551,2.142,552,2.542,553,3.627,554,3.06,555,2.542,556,4.445,557,4.445,558,1.775,559,3.23,560,2.142,561,2.142,564,3.498,572,2.322,636,2.93,637,2.93,638,2.93,639,2.563,640,2.93,641,2.93,642,2.93,643,2.93,644,2.93]],["title/controllers/DatabasesController.html",[0,1.196,645,3.039]],["body/controllers/DatabasesController.html",[0,1.752,2,1.752,3,0.168,4,0.15,5,0.113,7,0.269,8,0.012,9,0.937,16,0.168,17,0.283,20,2.514,21,0.01,22,0.01,65,2.051,127,2.928,178,3.052,179,2.928,393,3.052,394,3.188,403,2.813,645,5.306,646,5.329,647,6.091,648,4.97,649,5.329,650,6.091]],["title/modules/DatabasesModule.html",[23,1.026,37,2.834]],["body/modules/DatabasesModule.html",[2,1.818,3,0.135,4,0.12,5,0.091,7,0.304,8,0.012,9,0.75,16,0.135,17,0.227,21,0.009,22,0.009,23,1.731,25,2.013,26,2.088,27,2.253,28,2.253,29,2.088,30,3.24,31,2.253,37,5.541,47,2.92,48,2.253,49,2.167,51,2.253,53,2.444,54,1.319,140,1.403,144,0.843,185,2.088,254,4.051,255,3.565,265,2.553,266,3.865,267,2.794,275,4.316,296,3.865,324,1.754,621,2.088,645,5.127,648,5.049,649,4.267,651,4.267,652,4.267,653,4.877,654,4.877,655,4.051,656,3.565,657,4.051,658,3.325,659,3.865,660,3.565]],["title/injectables/DatabasesService.html",[110,0.827,648,2.664]],["body/injectables/DatabasesService.html",[3,0.087,4,0.078,5,0.059,7,0.276,8,0.012,9,0.486,12,4.308,13,1.731,16,0.087,17,0.147,18,1.862,19,3.244,20,2.297,21,0.006,22,0.006,54,0.855,64,1.519,65,1.064,66,1.519,67,0.78,97,2.297,107,1.799,110,0.93,111,1.175,113,0.338,114,1.304,116,0.746,118,0.881,140,1.345,143,0.967,144,0.877,145,0.394,146,0.909,175,1.681,225,2.177,227,3.444,255,2.31,269,1.189,275,3.37,277,3.705,278,3.97,290,2.025,291,2.025,296,2.504,297,2.154,298,1.654,299,2.504,304,2.764,312,2.31,318,3.436,320,2.675,323,1.415,324,2.471,333,2.764,367,1.505,494,3.201,496,2.001,536,1.304,546,2.996,553,3.187,556,3.566,557,3.566,621,1.353,648,2.996,656,2.31,658,2.154,661,2.764,662,6.15,663,6.872,664,2.764,665,4.868,666,4.41,667,5.565,668,4.675,669,3.16,670,4.675,671,3.16,672,3.16,673,2.31,674,2.154,675,4.41,676,2.504,677,4.067,678,4.675,679,2.154,680,2.764,681,2.504,682,3.16,683,3.16,684,3.16,685,5.565,686,3.16,687,5.565,688,3.16,689,5.565,690,3.16,691,5.023,692,3.16,693,3.16,694,3.16,695,3.16,696,4.09,697,2.764,698,2.764,699,4.675,700,3.16,701,3.16,702,3.16,703,3.16,704,3.16,705,3.16,706,3.16,707,3.705,708,3.16,709,5.565,710,2.764,711,5.565,712,5.565,713,4.675,714,5.565,715,5.565,716,4.675,717,2.764,718,2.764,719,2.764,720,3.16,721,3.16,722,3.16,723,3.16,724,3.16,725,2.025,726,3.16,727,2.31]],["title/classes/File.html",[5,0.077,17,0.193]],["body/classes/File.html",[3,0.181,4,0.161,5,0.149,8,0.011,16,0.181,17,0.305,21,0.01,22,0.01,492,1.569,728,5.737]],["title/controllers/FilesController.html",[0,1.196,729,3.039]],["body/controllers/FilesController.html",[0,1.104,2,1.104,3,0.106,4,0.094,5,0.125,7,0.279,8,0.012,9,0.59,16,0.106,17,0.178,20,1.584,21,0.007,22,0.007,65,1.293,103,1.858,113,0.411,114,1.5,116,0.949,118,1.976,119,1.123,127,1.845,138,1.644,143,2.06,144,0.808,145,0.839,146,1.935,175,1.38,178,2.695,179,1.845,183,3.094,184,1.845,185,1.643,193,2.208,199,2.009,200,1.213,331,2.069,368,2.777,369,2.22,370,2.22,382,1.584,385,2.32,386,1.584,387,3.094,389,1.845,391,3.447,393,1.924,394,2.009,398,1.584,400,1.584,403,1.773,410,3.094,411,2.208,415,2.208,450,2.009,569,2.46,729,3.931,730,3.358,731,3.042,732,6.209,733,3.838,734,3.838,735,3.838,736,5.246,737,3.838,738,3.838,739,6.209,740,3.838,741,4.706,742,3.838,743,3.838,744,4.706,745,3.838,746,5.379,747,5.379,748,3.838,749,3.979,750,3.358,751,4.262,752,3.838,753,2.806,754,3.838,755,3.838,756,3.838,757,3.838,758,3.838,759,3.838,760,3.838,761,3.838,762,3.838,763,3.838,764,5.379,765,3.838,766,3.358,767,3.838,768,3.838,769,3.838,770,3.838,771,3.838,772,3.838,773,3.838,774,3.838]],["title/modules/FilesModule.html",[23,1.026,38,2.834]],["body/modules/FilesModule.html",[2,1.928,3,0.148,4,0.131,5,0.099,7,0.299,8,0.012,9,0.822,13,2.929,16,0.148,17,0.248,21,0.009,22,0.009,23,1.807,25,2.207,26,2.288,27,2.469,28,2.469,29,2.288,30,3.382,31,2.469,38,5.501,47,3.096,48,2.469,49,2.376,51,3.096,55,5.312,109,4.677,193,3.075,729,5.352,749,5.171,750,4.677,753,3.908,775,4.677,776,4.677,777,5.346,778,5.346,779,5.346,780,4.9,781,5.346,782,5.346]],["title/injectables/FilesService.html",[110,0.827,749,2.664]],["body/injectables/FilesService.html",[3,0.124,4,0.111,5,0.139,7,0.25,8,0.012,9,0.692,16,0.124,17,0.209,21,0.008,22,0.008,103,1.965,110,1.193,111,1.674,113,0.482,114,1.673,116,1.004,118,2.193,119,1.076,143,2.202,144,0.864,145,0.897,146,2.069,175,1.619,331,2.308,367,1.622,368,2.969,369,2.476,370,2.476,382,2.476,385,2.434,386,2.476,389,2.884,398,1.858,400,1.858,429,3.112,569,4.802,731,3.568,736,5.362,749,3.844,751,4.754,783,3.939,784,5.999,785,4.503,786,4.503,787,4.503,788,4.503,789,4.503,790,7.492,791,4.503,792,3.939,793,4.503]],["title/controllers/HealthController.html",[0,1.196,794,3.039]],["body/controllers/HealthController.html",[0,1.618,2,1.618,3,0.155,4,0.138,5,0.104,7,0.278,8,0.012,9,0.865,16,0.155,17,0.261,18,2.24,19,3.074,21,0.01,22,0.01,103,1.475,113,0.602,114,1.929,116,0.754,118,1.568,127,2.704,138,1.305,183,3.979,185,2.407,794,5.056,795,4.921,796,6.917,797,6.194,798,5.624,799,5.624,800,6.917,801,6.917,802,6.917,803,4.457,804,5.624,805,5.624,806,5.624,807,5.624]],["title/modules/HealthModule.html",[23,1.026,39,2.834]],["body/modules/HealthModule.html",[2,2.092,3,0.169,4,0.15,5,0.113,7,0.288,8,0.012,9,0.939,16,0.169,17,0.284,21,0.01,22,0.01,23,1.794,25,2.521,39,4.958,51,2.822,794,5.676,803,4.841,808,6.109,809,6.109,810,7.272]],["title/classes/History.html",[17,0.193,811,2.519]],["body/classes/History.html",[3,0.13,4,0.116,5,0.088,7,0.282,8,0.012,16,0.13,17,0.353,21,0.009,22,0.009,67,1.165,87,1.948,113,0.505,116,0.925,119,0.992,138,1.602,145,0.973,200,1.491,269,1.574,300,3.218,314,1.358,323,1.201,367,1.276,489,2.75,492,1.129,499,3.319,502,2.858,524,3.252,527,2.471,528,2.75,532,3.783,533,1.755,535,2.381,536,1.948,537,2.02,538,2.02,554,2.715,555,2.715,595,3.025,603,2.586,605,3.783,623,3.218,625,4.219,811,4.82,812,5.357,813,4.72,814,4.72,815,4.697,816,4.72,817,4.72,818,2.586,819,3.218,820,2.86,821,3.741,822,2.86,823,2.02,824,3.741,825,3.741]],["title/interfaces/IUser.html",[137,1.495,826,2.664]],["body/interfaces/IUser.html",[3,0.149,4,0.132,5,0.1,8,0.012,16,0.149,21,0.009,22,0.009,23,1.326,113,0.575,119,1.235,137,2.418,144,0.97,145,1.042,146,1.934,269,1.711,314,2.324,318,4.026,323,1.957,324,2.766,504,4.66,587,3.444,826,3.444,827,4.259,828,4.702]],["title/classes/Job.html",[17,0.193,829,1.998]],["body/classes/Job.html",[3,0.092,4,0.081,5,0.062,7,0.179,8,0.012,16,0.158,17,0.154,21,0.007,22,0.007,54,0.896,67,1.194,107,1.274,113,0.354,116,1.099,119,1.173,138,1.904,144,0.756,145,1.053,225,1.014,267,1.928,269,1.231,314,1.809,323,1.455,344,2.448,378,2.057,429,1.862,440,2.542,489,2.278,490,2.642,492,0.793,495,3.29,496,2.448,497,3.29,498,2.258,499,2.75,500,5.174,502,3.543,504,3.811,505,4.032,506,4.483,511,3.153,517,2.007,518,2.784,519,2.007,520,2.693,539,3.666,540,4.181,541,4.181,542,4.533,543,4.533,544,4.533,545,4.533,546,3.666,829,2.327,830,2.421,831,3.313,832,3.313,833,3.313,834,3.313,835,3.313,836,3.313,837,3.313,838,3.313,839,3.313,840,3.313,841,3.313,842,3.313,843,3.313,844,3.313,845,3.313,846,3.313,847,3.313,848,3.313,849,2.421,850,2.258,851,2.898]],["title/controllers/JobsController.html",[0,1.196,852,3.039]],["body/controllers/JobsController.html",[0,1.022,2,1.022,3,0.098,4,0.087,5,0.066,7,0.273,8,0.012,9,0.546,16,0.098,17,0.165,20,1.466,21,0.007,22,0.007,65,1.197,94,2.782,103,1.804,113,0.38,114,1.42,116,0.922,118,1.919,119,1.19,127,1.708,137,2.802,138,1.597,140,2.359,143,2.106,144,0.826,145,0.858,146,1.979,175,2.574,178,2.552,179,2.448,183,2.929,184,1.708,185,1.521,194,1.521,199,1.86,200,1.123,331,2.29,367,1.377,368,2.456,369,2.102,370,2.102,374,1.579,375,2.888,376,3.109,381,2.263,382,1.466,385,2.383,386,1.466,387,2.044,389,1.708,391,2.277,393,1.781,394,1.86,395,2.18,398,1.466,400,1.466,403,1.641,404,2.597,406,3.085,407,2.153,408,2.153,410,2.044,411,2.044,413,2.422,415,2.044,534,4.337,829,3.626,852,3.722,853,3.109,854,4.35,855,3.109,856,2.277,857,3.553,858,4.035,859,3.553,860,3.109,861,3.553,862,2.422,863,3.553,864,5.142,865,2.816,866,3.553,867,3.814,868,3.109,869,4.035,870,3.553,871,3.553,872,2.277,873,3.553,874,3.553,875,3.553,876,2.422,877,3.553,878,2.422,879,3.553]],["title/modules/JobsModule.html",[23,1.026,40,2.834]],["body/modules/JobsModule.html",[2,1.95,3,0.151,4,0.134,5,0.101,7,0.295,8,0.012,9,0.837,16,0.151,17,0.253,21,0.009,22,0.009,23,1.822,25,2.247,26,2.331,27,2.515,28,2.515,29,2.331,30,3.411,31,2.515,40,5.526,47,3.132,48,2.515,49,2.42,51,2.515,53,2.729,54,1.473,144,0.654,265,2.85,267,2.169,829,2.618,850,4.623,852,5.397,867,5.195,868,4.764,880,4.764,881,4.764,882,5.445,883,5.445,884,4.764,885,4.315]],["title/injectables/JobsService.html",[110,0.827,867,2.664]],["body/injectables/JobsService.html",[3,0.084,4,0.074,5,0.056,7,0.267,8,0.012,9,0.465,16,0.084,17,0.141,18,1.803,19,1.344,21,0.006,22,0.006,54,0.818,64,1.454,65,1.826,66,1.454,67,0.746,92,1.657,94,3.001,97,3.042,103,1.69,110,0.9,111,1.125,113,0.324,114,1.262,116,0.906,118,1.797,119,1.109,137,2.699,140,2.12,143,2.07,144,0.812,145,0.843,146,1.945,147,2.838,194,1.295,225,1.843,227,2.78,278,3.151,298,1.583,314,2.073,321,2.603,323,1.379,331,1.741,344,1.295,362,3.462,367,1.224,368,1.868,369,1.868,370,1.868,374,2.011,375,2.41,381,2.41,382,1.868,385,2.215,386,1.868,389,2.176,395,2.321,398,1.248,400,1.248,429,2.602,435,1.833,436,1.74,437,1.74,440,1.344,441,2.742,442,1.833,443,1.833,444,1.833,445,1.833,446,1.833,447,1.833,448,1.833,449,1.833,450,1.583,451,2.742,452,2.742,454,2.742,455,1.833,457,1.833,458,1.833,459,1.833,460,1.833,461,1.833,462,1.833,463,1.833,464,1.833,465,2.742,466,1.833,467,1.833,468,1.833,469,3.647,470,1.833,471,2.742,472,2.742,473,1.833,474,1.833,475,2.742,476,1.833,477,1.833,478,1.833,479,1.833,480,1.833,481,1.833,482,1.833,483,1.833,489,1.205,490,1.397,534,4.097,829,2.176,849,2.211,855,3.96,864,4.915,867,2.901,869,3.587,884,2.646,886,2.646,887,3.025,888,3.025,889,3.96,890,3.025,891,3.025,892,3.025,893,3.025,894,3.025,895,2.646,896,3.025,897,3.025,898,3.025,899,3.025,900,3.025,901,3.025,902,4.526,903,3.025]],["title/injectables/JwtAuthGuard.html",[60,3.039,110,0.827]],["body/injectables/JwtAuthGuard.html",[3,0.199,4,0.099,5,0.075,7,0.267,8,0.012,9,0.618,16,0.111,17,0.187,18,1.601,21,0.008,22,0.008,59,2.74,60,4.059,103,1.669,107,2.136,110,1.105,111,1.494,113,0.43,114,1.549,116,0.852,118,1.549,119,0.577,140,2.072,143,1.948,144,0.764,145,0.793,146,1.83,169,5.042,171,5.017,175,1.997,185,1.72,193,2.311,225,2.205,229,3.516,247,2.575,318,2.907,353,3.486,354,3.185,403,1.856,621,1.72,797,3.185,823,1.72,904,6.005,905,3.185,906,4.858,907,5.553,908,3.516,909,5.903,910,4.019,911,4.858,912,5.206,913,4.019,914,4.679,915,5.553,916,4.019,917,6.863,918,4.019,919,4.858,920,3.516,921,3.185,922,4.019,923,3.185,924,4.858,925,4.019,926,3.185,927,4.019,928,4.019,929,4.019,930,3.516,931,4.019,932,4.019,933,4.019,934,4.019,935,5.553,936,4.019,937,5.553,938,4.019,939,4.338,940,4.019,941,4.019,942,4.019,943,4.019,944,4.019,945,4.019,946,4.019,947,4.019]],["title/injectables/JwtStrategy.html",[110,0.827,242,2.834]],["body/injectables/JwtStrategy.html",[3,0.126,4,0.112,5,0.085,7,0.286,8,0.012,9,0.7,12,4.683,13,2.495,16,0.126,17,0.212,18,2.407,19,2.685,21,0.008,22,0.008,97,2.8,103,1.194,110,1.202,111,1.693,113,0.487,114,1.685,116,0.81,118,1.27,119,0.868,137,2.598,143,1.85,144,0.903,145,0.753,146,1.738,147,3.163,194,1.949,195,3.959,196,3.608,203,5.375,216,5.287,225,2.076,226,3.608,227,2.103,242,4.12,247,2.918,305,3.328,312,3.328,314,1.951,318,2.383,319,3.983,323,1.537,324,2.439,325,5.287,621,1.949,823,1.949,923,3.608,948,3.983,949,5.287,950,4.553,951,4.553,952,6.043,953,4.553,954,4.553,955,3.983,956,3.983,957,3.983,958,3.983,959,4.553,960,4.553,961,4.553,962,3.328,963,4.553,964,4.553,965,4.553,966,4.553,967,4.553]],["title/injectables/LocalAuthGuard.html",[110,0.827,186,3.039]],["body/injectables/LocalAuthGuard.html",[3,0.174,4,0.154,5,0.117,7,0.274,8,0.012,9,0.965,16,0.174,17,0.292,21,0.01,22,0.01,110,1.47,111,2.334,186,5.402,247,4.023,823,2.687,905,4.974,920,5.492,968,5.492,969,6.277]],["title/injectables/LocalStrategy.html",[110,0.827,243,2.834]],["body/injectables/LocalStrategy.html",[3,0.139,4,0.124,5,0.094,7,0.279,8,0.012,9,0.776,14,4.572,16,0.139,17,0.234,18,2.009,21,0.009,22,0.009,97,2.942,103,1.323,110,1.285,111,1.876,113,0.54,114,1.802,116,0.866,118,1.407,119,1.142,140,2.05,143,1.978,144,0.776,145,0.805,146,1.858,175,1.814,187,3.998,188,3.998,225,1.544,227,2.33,243,4.405,247,3.233,288,3.056,289,5.12,305,3.687,320,3.735,353,2.764,354,3.998,403,2.33,823,2.159,919,4.413,923,3.998,949,5.652,955,4.413,957,4.413,958,4.413,970,4.413,971,5.044,972,5.044,973,6.461,974,5.044,975,5.044,976,5.044]],["title/controllers/MailController.html",[0,1.196,977,3.039]],["body/controllers/MailController.html",[0,1.136,2,1.136,3,0.109,4,0.097,5,0.073,7,0.298,8,0.012,9,0.607,16,0.109,17,0.183,18,1.573,19,3.027,20,1.63,21,0.008,22,0.008,54,1.068,64,1.898,65,1.848,66,1.898,67,0.974,78,3.13,92,3.006,97,2.602,103,1.036,113,0.423,114,1.53,116,0.529,118,1.101,127,1.898,138,0.917,144,0.474,175,1.42,178,1.979,179,1.898,183,3.156,184,1.898,185,1.69,199,2.067,200,1.248,225,2.191,227,2.912,278,3.3,290,2.531,298,2.067,323,1.396,378,1.42,393,1.979,394,2.067,539,3.516,541,2.887,691,4.979,766,3.455,829,2.637,849,2.887,854,4.608,889,3.455,895,3.455,914,2.692,977,4.01,978,3.455,979,3.949,980,6.812,981,3.949,982,3.949,983,3.949,984,4.04,985,3.455,986,6.304,987,2.887,988,3.13,989,2.271,990,2.531,991,2.887,992,3.455,993,2.887,994,3.949,995,3.949,996,3.949,997,3.949,998,3.455,999,3.455,1000,3.949,1001,3.949,1002,3.949,1003,3.949,1004,4.8,1005,3.949,1006,3.949,1007,5.486,1008,3.949,1009,3.949,1010,3.949,1011,3.949,1012,3.949,1013,3.949,1014,3.949,1015,3.949,1016,3.949,1017,3.949,1018,3.949,1019,3.13,1020,3.949,1021,3.949,1022,3.949,1023,3.949,1024,3.949,1025,3.949,1026,3.949,1027,4.8,1028,3.949,1029,3.949,1030,3.949]],["title/modules/MailModule.html",[23,1.026,41,2.664]],["body/modules/MailModule.html",[2,1.701,3,0.122,4,0.108,5,0.082,7,0.304,8,0.012,9,0.678,12,4.32,13,2.414,16,0.122,17,0.205,21,0.008,22,0.008,23,1.646,25,1.819,26,1.886,27,2.035,28,2.035,29,1.886,30,3.082,31,2.035,41,4.907,47,2.731,48,2.035,49,1.958,51,2.035,53,2.208,54,1.192,96,3.492,97,1.819,104,3.492,107,2.567,128,3.855,140,1.267,144,0.71,175,1.584,265,2.306,267,2.355,286,3.855,829,2.118,850,4.031,885,3.492,962,4.322,977,4.877,984,4.907,985,3.855,987,4.322,988,3.492,989,2.534,990,2.824,992,3.855,993,3.221,1027,3.855,1031,3.855,1032,3.855,1033,4.406,1034,4.406,1035,4.406,1036,3.492,1037,2.824,1038,5.912,1039,4.406,1040,4.031,1041,3.855,1042,4.406,1043,4.406,1044,4.406,1045,4.406,1046,4.406,1047,4.406,1048,4.406,1049,3.855,1050,4.406,1051,4.406,1052,4.406,1053,4.406,1054,4.406,1055,4.406,1056,4.406]],["title/injectables/MailService.html",[110,0.827,984,2.664]],["body/injectables/MailService.html",[3,0.178,4,0.158,5,0.12,7,0.238,8,0.011,9,0.989,16,0.178,17,0.299,21,0.01,22,0.01,110,1.492,111,2.392,984,4.805,1057,5.629]],["title/injectables/MulterConfigService.html",[110,0.827,780,3.039]],["body/injectables/MulterConfigService.html",[3,0.112,4,0.1,5,0.128,7,0.268,8,0.012,9,0.625,16,0.112,17,0.189,21,0.008,22,0.008,103,1.679,107,1.564,110,1.114,111,1.512,113,0.435,114,1.561,116,0.858,118,1.561,119,0.92,143,1.245,144,0.769,145,0.507,146,1.17,151,4.092,193,2.339,225,1.245,269,1.424,290,4.103,291,2.606,359,6.329,367,1.1,540,2.972,621,1.741,679,2.772,725,3.588,744,3.558,753,2.972,780,4.092,1036,3.222,1037,3.588,1049,3.558,1058,3.558,1059,6.402,1060,6.898,1061,5.598,1062,4.066,1063,6.402,1064,5.598,1065,4.066,1066,4.066,1067,4.066,1068,4.066,1069,5.598,1070,5.598,1071,5.598,1072,4.066,1073,4.066,1074,4.066,1075,4.066,1076,4.066,1077,4.066,1078,4.066,1079,4.092,1080,4.066,1081,4.066,1082,5.598,1083,4.066,1084,4.066,1085,4.066,1086,4.066,1087,6.402,1088,4.066,1089,4.066,1090,4.066,1091,4.066,1092,4.066,1093,3.558,1094,4.066,1095,4.066,1096,4.066,1097,4.066,1098,4.066,1099,5.598,1100,4.066,1101,4.066,1102,4.066,1103,5.598,1104,4.066,1105,4.066,1106,4.066,1107,5.598,1108,5.598,1109,4.066,1110,4.066,1111,4.066,1112,5.598,1113,4.066,1114,5.598,1115,4.066]],["title/classes/Permission.html",[17,0.193,621,1.779]],["body/classes/Permission.html",[3,0.107,4,0.095,5,0.072,7,0.201,8,0.012,16,0.173,17,0.18,21,0.007,22,0.007,23,1.54,54,1.048,67,1.336,107,1.491,113,0.415,116,1.084,119,1.172,138,1.879,144,0.75,145,1.047,225,1.186,267,2.157,269,1.377,314,1.795,323,1.587,344,2.671,440,2.773,489,2.486,490,2.882,492,0.927,495,3.589,497,3.589,498,4.255,499,3,500,5.135,502,3.402,504,3.781,505,3.999,506,4.462,511,2.713,517,2.347,518,3.114,519,2.347,520,2.671,587,3.999,588,4.255,621,2.317,655,2.483,673,2.832,1116,2.832,1117,3.875,1118,3.875,1119,3.875,1120,3.875,1121,3.875,1122,3.875,1123,3.875,1124,3.875,1125,3.875,1126,3.875,1127,3.875,1128,3.875,1129,3.39]],["title/controllers/PermissionsController.html",[0,1.196,1130,3.039]],["body/controllers/PermissionsController.html",[0,1.027,2,1.027,3,0.099,4,0.088,5,0.066,7,0.274,8,0.012,9,0.549,16,0.099,17,0.166,20,1.474,21,0.007,22,0.007,65,1.203,94,2.789,103,1.808,113,0.382,114,1.425,116,0.924,118,1.923,119,1.19,127,1.717,137,2.805,138,1.6,140,2.36,143,2.11,144,0.828,145,0.859,146,1.983,175,1.838,178,2.991,179,2.457,181,3.125,184,1.717,185,1.529,194,1.529,199,1.869,200,1.128,318,3.124,331,2.296,367,1.614,368,2.463,369,2.11,370,2.11,374,1.587,375,2.895,379,3.485,381,2.271,382,1.474,385,2.386,386,1.474,387,2.054,389,1.717,391,2.289,393,1.79,394,1.869,395,2.188,398,1.474,400,1.474,403,1.65,406,3.096,407,2.164,408,2.164,410,2.054,411,2.054,413,2.435,415,2.054,584,4.596,621,3.233,856,2.289,860,3.125,862,2.435,865,2.83,872,2.289,876,2.435,878,2.435,1130,3.736,1131,3.125,1132,3.125,1133,3.572,1134,2.435,1135,3.572,1136,3.572,1137,3.572,1138,5.149,1139,3.572,1140,3.825,1141,3.125,1142,4.05,1143,3.572,1144,3.572,1145,3.572,1146,3.572,1147,3.572,1148,3.572,1149,3.572]],["title/modules/PermissionsModule.html",[23,1.026,42,2.834]],["body/modules/PermissionsModule.html",[2,1.937,3,0.149,4,0.132,5,0.1,7,0.294,8,0.012,9,0.829,16,0.149,17,0.25,21,0.009,22,0.009,23,1.813,25,2.224,26,2.306,27,2.489,28,2.489,29,2.306,30,3.394,31,2.489,42,5.512,47,3.111,48,2.489,49,2.394,51,2.489,53,2.7,54,1.457,144,0.647,265,2.82,267,2.146,621,2.306,655,4.317,659,4.27,1130,5.371,1140,5.181,1141,4.714,1150,4.714,1151,4.714,1152,5.388,1153,5.388,1154,4.714]],["title/injectables/PermissionsService.html",[110,0.827,1140,2.664]],["body/injectables/PermissionsService.html",[3,0.076,4,0.067,5,0.051,7,0.266,8,0.012,9,0.421,16,0.076,17,0.127,18,1.672,19,1.217,21,0.006,22,0.006,54,0.741,64,1.317,65,1.719,66,1.317,67,1.259,92,1.501,94,2.9,97,3.116,103,1.707,110,0.835,111,1.018,113,0.293,114,1.171,116,0.872,118,1.721,119,1.085,137,2.63,140,2.062,143,1.993,144,0.782,145,0.811,146,1.872,147,2.995,175,1.509,194,1.172,225,2.074,227,3.007,278,2.995,295,3.092,298,1.434,314,2.011,321,2.414,323,1.298,331,1.964,344,1.172,348,3.068,353,2.3,356,3.068,362,2.936,367,1.135,368,1.733,369,1.733,370,1.733,374,1.865,375,2.268,378,0.985,381,2.268,382,1.733,385,2.208,386,1.733,389,1.317,395,2.185,398,1.13,400,1.13,429,2.504,435,1.659,436,2.936,437,1.575,440,1.217,441,3.092,442,1.659,443,1.659,444,1.659,445,1.659,446,1.659,447,1.659,448,1.659,449,1.659,450,1.434,451,2.543,452,2.543,454,2.543,455,1.659,457,1.659,458,1.659,459,1.659,460,1.659,461,1.659,462,1.659,463,1.659,464,1.659,465,2.543,466,1.659,467,1.659,468,1.659,469,3.466,470,1.659,471,2.543,472,2.543,473,1.659,474,1.659,475,2.543,476,1.659,477,1.659,478,1.659,479,1.659,480,1.659,481,1.659,482,1.659,483,1.659,484,1.755,486,1.755,489,1.091,490,1.265,584,4.172,587,2.69,588,3.901,621,1.797,665,3.673,673,2.002,680,2.396,725,2.69,939,3.901,1037,2.69,1079,3.068,1132,3.673,1138,4.766,1140,2.69,1142,3.327,1154,2.396,1155,2.396,1156,2.739,1157,2.739,1158,2.739,1159,2.739,1160,2.739,1161,2.739,1162,2.739,1163,5.104,1164,4.198,1165,4.198,1166,3.068,1167,2.739,1168,2.739,1169,2.739,1170,2.739,1171,2.739,1172,4.198,1173,4.198,1174,4.198,1175,2.739]],["title/classes/RegisterUserDto.html",[17,0.193,173,2.278]],["body/classes/RegisterUserDto.html",[3,0.081,4,0.072,5,0.054,7,0.219,8,0.012,16,0.147,17,0.31,20,1.816,21,0.006,22,0.006,67,1.086,87,3.358,113,0.312,116,0.955,119,1.163,138,1.654,144,0.856,145,0.965,173,2.411,189,1.46,190,1.765,191,4.419,200,0.92,269,1.119,288,2.666,314,0.838,320,3.507,323,1.891,324,2.623,378,2.673,385,1.39,429,2.439,492,0.697,494,3.982,496,1.883,520,1.247,524,3.225,527,1.525,528,2.625,529,3.398,530,3.398,531,2.657,532,2.905,533,1.083,535,3.097,536,3.411,537,3.498,538,3.498,547,1.765,550,3.875,551,2.13,552,2.531,553,3.615,554,3.049,555,2.531,556,4.437,557,4.437,558,2.666,559,3.216,560,2.13,561,2.13,564,3.49,572,2.309,599,2.549,639,2.549,1176,2.913,1177,2.913,1178,2.913,1179,2.913,1180,2.913,1181,2.913,1182,2.913,1183,2.913]],["title/interfaces/Response.html",[156,2.664,826,2.664]],["body/interfaces/Response.html",[3,0.139,4,0.124,5,0.093,7,0.288,8,0.012,9,0.774,16,0.178,17,0.234,21,0.009,22,0.009,59,3.431,103,1.32,110,1.283,113,0.538,119,1.023,145,0.887,146,1.855,156,4.134,185,2.154,269,1.641,403,2.324,429,2.739,535,2.987,679,3.431,727,5.806,826,3.225,827,3.988,909,5.642,912,4.398,914,3.431,926,3.988,990,3.225,1184,3.988,1185,6.793,1186,5.644,1187,5.644,1188,5.112,1189,4.402,1190,4.402,1191,3.678,1192,3.678,1193,4.402,1194,4.402,1195,4.402,1196,4.402,1197,4.402,1198,4.402]],["title/classes/Resume.html",[17,0.193,1199,2.519]],["body/classes/Resume.html",[3,0.094,4,0.083,5,0.063,7,0.236,8,0.012,16,0.16,17,0.157,21,0.007,22,0.007,54,0.915,67,1.213,107,1.302,113,0.362,116,1.076,119,1.122,138,1.864,145,1.055,225,1.036,267,1.958,269,1.25,314,1.941,323,1.848,344,2.478,378,1.217,423,2.96,440,2.573,489,2.306,490,2.674,492,0.81,495,3.33,497,3.33,499,2.783,500,5.061,502,3.356,504,4.089,505,4.656,506,4.509,511,2.463,517,2.05,518,2.827,519,2.05,520,3.342,596,4.232,597,4.232,598,4.588,604,4.232,605,3.482,811,3.507,815,2.168,829,1.627,885,2.681,993,2.473,1199,2.978,1200,2.473,1201,5.349,1202,5.036,1203,3.383,1204,3.383,1205,3.383,1206,3.383,1207,3.383,1208,3.383,1209,3.383,1210,3.383,1211,3.383,1212,3.383,1213,3.383,1214,3.383,1215,3.383,1216,3.383,1217,3.383,1218,2.681,1219,3.383,1220,3.383,1221,2.473,1222,2.96]],["title/controllers/ResumesController.html",[0,1.196,1223,3.039]],["body/controllers/ResumesController.html",[0,0.996,2,0.996,3,0.096,4,0.085,5,0.064,7,0.271,8,0.012,9,0.533,16,0.096,17,0.161,20,1.429,21,0.007,22,0.007,65,1.166,94,2.75,103,1.862,113,0.371,114,1.394,116,0.951,118,1.979,119,1.2,127,1.665,137,2.877,138,1.647,140,2.402,143,2.173,144,0.853,145,0.885,146,2.042,178,1.736,179,2.403,184,1.665,185,1.482,194,1.482,199,1.813,200,1.094,223,2.361,331,2.257,367,1.352,368,2.421,369,2.063,370,2.063,374,1.539,375,2.855,379,3.408,381,2.222,382,1.429,385,2.242,386,1.429,387,2.875,389,1.665,391,3.204,393,1.736,394,1.813,395,2.14,398,1.429,400,1.429,403,1.6,404,2.531,406,2.098,407,2.098,408,2.098,410,2.875,411,1.992,413,2.361,415,1.992,593,4.117,603,3.214,605,3.52,819,3.408,822,2.098,856,2.22,872,2.22,1134,2.361,1199,3.029,1223,3.654,1224,3.03,1225,5.96,1226,4.999,1227,3.03,1228,3.463,1229,3.463,1230,3.463,1231,3.463,1232,4.999,1233,3.463,1234,3.463,1235,3.463,1236,3.463,1237,3.76,1238,3.03,1239,3.463,1240,3.463,1241,3.463,1242,3.463,1243,3.463,1244,3.463,1245,3.463,1246,3.463,1247,3.463,1248,3.463]],["title/modules/ResumesModule.html",[23,1.026,43,2.834]],["body/modules/ResumesModule.html",[2,1.944,3,0.15,4,0.133,5,0.101,7,0.294,8,0.012,9,0.833,16,0.15,17,0.252,21,0.009,22,0.009,23,1.817,25,2.236,26,2.319,27,2.502,28,2.502,29,2.319,30,3.402,31,2.502,43,5.519,47,3.121,48,2.502,49,2.407,51,2.502,53,2.715,54,1.465,144,0.651,265,2.835,267,2.158,1199,3.282,1221,4.94,1223,5.384,1237,5.188,1238,4.739,1249,4.739,1250,4.739,1251,5.417,1252,5.417,1253,4.739,1254,5.417]],["title/injectables/ResumesService.html",[110,0.827,1237,2.664]],["body/injectables/ResumesService.html",[3,0.072,4,0.064,5,0.048,7,0.262,8,0.012,9,0.399,16,0.072,17,0.121,18,1.605,19,1.154,21,0.006,22,0.006,54,0.702,64,1.248,65,1.662,66,1.248,67,1.218,92,1.423,94,2.845,97,3.077,103,1.671,110,0.802,111,0.966,113,0.278,114,1.124,116,0.891,118,1.777,119,1.109,137,2.716,140,2.074,143,2.035,144,0.847,145,0.829,146,1.912,147,2.912,175,1.775,194,1.112,225,1.843,227,2.781,278,2.912,295,1.573,298,1.359,314,2.074,321,2.317,323,1.621,331,1.55,344,1.725,353,1.423,362,3.952,367,1.09,368,1.663,369,1.663,370,1.663,374,1.79,375,2.194,381,2.194,382,1.663,385,2.1,386,1.663,389,1.937,395,2.113,398,1.072,400,1.072,429,2.451,435,1.573,436,1.494,437,1.494,440,1.154,441,3.648,442,1.573,443,2.441,444,1.573,445,1.573,446,1.573,447,1.573,448,1.573,449,1.573,450,2.584,451,2.441,452,2.441,454,2.441,455,1.573,457,1.573,458,1.573,459,1.573,460,1.573,461,1.573,462,1.573,463,1.573,464,1.573,465,2.441,466,1.573,467,1.573,468,1.573,469,3.37,470,1.573,471,2.441,472,2.441,473,1.573,474,1.573,475,2.441,476,1.573,477,1.573,478,1.573,479,1.573,480,1.573,481,1.573,482,1.573,483,1.573,484,1.664,486,1.664,489,1.966,490,1.199,499,1.937,502,1.861,593,3.565,596,1.898,597,1.898,603,2.705,604,2.945,605,3.866,811,2.441,819,2.747,822,1.573,1037,2.582,1199,2.991,1218,2.058,1227,3.525,1237,2.582,1253,2.272,1255,2.272,1256,4.029,1257,2.597,1258,2.597,1259,4.029,1260,2.597,1261,2.597,1262,4.029,1263,2.597,1264,2.597,1265,2.597,1266,2.597,1267,2.597,1268,2.597,1269,4.029,1270,2.597,1271,2.597,1272,2.597,1273,4.029,1274,2.058,1275,2.597,1276,2.058,1277,4.029,1278,4.029,1279,2.597,1280,2.597,1281,2.597,1282,2.272,1283,3.193]],["title/classes/Role.html",[17,0.193,324,1.495]],["body/classes/Role.html",[3,0.105,4,0.093,5,0.07,7,0.228,8,0.012,16,0.17,17,0.176,21,0.007,22,0.007,54,1.023,67,1.313,107,1.455,113,0.405,116,1.08,119,1.12,138,1.871,144,0.74,145,1.048,225,1.158,267,2.12,269,1.354,314,1.772,318,3.224,323,1.567,324,1.914,344,2.637,440,2.737,489,2.453,490,2.845,492,0.905,495,3.543,496,2.637,497,3.543,498,4.199,499,2.961,500,5.108,502,3.375,504,3.732,505,4.284,506,4.427,511,3.35,517,2.291,518,3.062,519,2.291,520,2.861,546,3.947,621,2.637,656,2.764,657,2.424,659,2.997,674,2.579,1201,4.218,1202,4.218,1284,2.764,1285,3.782,1286,3.782,1287,3.782,1288,3.782,1289,3.782,1290,3.782,1291,3.782,1292,3.782,1293,3.782,1294,3.782,1295,3.782,1296,3.782,1297,3.309]],["title/controllers/RolesController.html",[0,1.196,1298,3.039]],["body/controllers/RolesController.html",[0,1.026,2,1.026,3,0.099,4,0.088,5,0.066,7,0.274,8,0.012,9,0.548,16,0.099,17,0.166,20,1.472,21,0.007,22,0.007,65,1.201,94,2.787,103,1.807,113,0.381,114,1.424,116,0.923,118,1.921,119,1.19,127,1.714,137,2.804,138,1.599,140,2.36,143,2.109,144,0.827,145,0.859,146,1.982,175,1.836,178,2.558,179,2.454,184,1.714,185,1.526,194,1.526,195,3.267,199,1.866,200,1.126,223,2.431,324,2.714,331,2.294,367,1.381,368,2.461,369,2.107,370,2.107,374,1.584,375,2.893,381,2.268,382,1.472,385,2.519,386,1.472,387,2.051,389,1.714,391,2.285,393,1.787,394,1.866,395,2.185,398,1.472,400,1.472,403,1.647,404,2.606,406,2.16,407,2.16,408,2.16,410,2.051,411,2.051,413,2.431,415,2.051,612,4.594,856,2.285,858,4.045,862,2.431,865,2.826,872,2.285,876,2.431,878,2.431,1134,2.431,1298,3.731,1299,3.119,1300,5.217,1301,3.119,1302,3.565,1303,3.565,1304,2.826,1305,3.565,1306,3.565,1307,5.147,1308,3.565,1309,3.119,1310,4.045,1311,3.565,1312,3.565,1313,3.565,1314,3.565,1315,3.565,1316,3.565,1317,3.565]],["title/modules/RolesModule.html",[23,1.026,44,2.664]],["body/modules/RolesModule.html",[2,1.876,3,0.142,4,0.126,5,0.095,7,0.301,8,0.012,9,0.787,16,0.142,17,0.238,21,0.009,22,0.009,23,1.771,25,2.113,26,2.192,27,2.365,28,2.365,29,2.192,30,3.315,31,3.315,41,3.281,44,5.197,47,3.013,48,2.365,49,2.275,51,2.365,53,2.566,54,1.385,144,0.615,195,4.631,265,2.68,267,2.039,324,1.841,621,2.192,655,3.281,656,3.742,657,4.18,660,3.742,1298,5.246,1309,4.479,1318,4.479,1319,4.479,1320,4.479,1321,5.12,1322,5.12,1323,4.479,1324,5.12]],["title/injectables/RolesService.html",[110,0.827,195,2.278]],["body/injectables/RolesService.html",[3,0.075,4,0.066,5,0.05,7,0.264,8,0.012,9,0.415,16,0.075,17,0.125,18,1.652,19,1.198,21,0.006,22,0.006,23,0.665,54,0.729,64,1.296,65,1.911,66,1.296,67,1.247,92,1.477,94,2.884,97,3.209,103,1.697,110,0.825,111,1.002,113,0.288,114,1.156,116,0.867,118,1.708,119,1.081,137,2.619,140,2.052,143,1.98,144,0.875,145,0.806,146,1.861,147,3.206,175,1.817,194,1.154,195,2.272,225,2.063,227,3.112,278,2.97,295,2.512,298,1.411,314,2.001,318,1.411,321,2.385,323,1.286,324,2.326,331,1.595,344,1.154,348,1.97,353,2.769,356,1.97,362,2.907,367,1.121,368,1.712,369,1.712,370,1.712,374,1.843,375,2.246,381,2.246,382,1.712,385,2.044,386,1.712,389,1.994,395,2.163,398,1.113,400,1.113,429,2.489,435,1.633,436,1.55,437,1.55,440,1.198,441,3.062,442,1.633,443,1.633,444,1.633,445,1.633,446,1.633,447,1.633,448,1.633,449,1.633,450,3.386,451,2.512,452,2.512,454,2.512,455,1.633,457,1.633,458,1.633,459,1.633,460,1.633,461,1.633,462,1.633,463,1.633,464,1.633,465,2.512,466,1.633,467,1.633,468,1.633,469,3.438,470,1.633,471,2.512,472,2.512,473,1.633,474,1.633,475,2.512,476,1.633,477,1.633,478,1.633,479,1.633,480,1.633,481,1.633,482,1.633,483,1.633,484,2.658,486,2.658,489,1.074,490,1.245,587,1.728,588,1.838,612,4.146,666,3.286,674,1.838,681,2.136,696,3.628,707,2.136,725,1.728,939,2.827,1037,1.728,1079,1.97,1166,1.97,1274,2.136,1276,2.136,1283,2.136,1301,3.628,1307,4.742,1310,3.286,1323,2.358,1325,2.358,1326,2.696,1327,2.696,1328,2.696,1329,2.696,1330,2.696,1331,2.696,1332,2.696,1333,4.147,1334,2.696,1335,2.696,1336,2.696,1337,2.696,1338,2.696,1339,2.696,1340,4.147,1341,2.696,1342,2.696,1343,2.696,1344,2.358,1345,2.696]],["title/classes/ShowUserDto.html",[17,0.193,1346,2.834]],["body/classes/ShowUserDto.html",[3,0.166,4,0.148,5,0.112,7,0.286,8,0.012,16,0.166,17,0.335,21,0.01,22,0.01,189,3.017,192,3.858,225,1.843,320,2.894,367,1.628,492,1.44,524,2.398,528,2.675,531,3.017,533,2.238,547,3.647,820,3.647,823,2.577,1346,4.915,1347,5.266,1348,5.266,1349,4.77,1350,4.4,1351,5.266]],["title/classes/Subscriber.html",[17,0.193,989,2.391]],["body/classes/Subscriber.html",[3,0.131,4,0.116,5,0.088,7,0.23,8,0.012,16,0.191,17,0.22,21,0.009,22,0.009,54,1.279,67,1.167,107,1.82,113,0.506,116,1.067,119,1.123,138,1.848,144,0.83,145,1.007,225,1.448,267,2.469,269,1.577,323,1.758,344,2.959,492,1.132,495,3.976,497,3.976,499,3.323,500,5.135,502,3.609,511,3.106,517,2.866,518,3.565,519,2.866,539,4.43,989,3.565,991,3.458,1040,3.225,1352,3.458,1353,4.731,1354,4.731,1355,4.731,1356,4.731,1357,4.731,1358,4.731,1359,4.731,1360,4.139]],["title/controllers/SubscribersController.html",[0,1.196,1361,3.039]],["body/controllers/SubscribersController.html",[0,1.036,2,1.036,3,0.1,4,0.089,5,0.067,7,0.274,8,0.012,9,0.554,16,0.1,17,0.167,20,1.487,21,0.007,22,0.007,65,1.213,94,2.8,103,1.814,113,0.385,114,1.434,116,0.927,118,1.929,119,1.174,127,1.732,137,2.81,138,1.605,140,2.363,143,2.118,144,0.831,145,0.862,146,1.99,175,1.849,178,3.006,179,2.472,184,1.732,185,1.542,194,1.542,199,1.886,200,1.138,223,2.456,331,2.307,367,1.622,368,2.475,369,2.123,370,2.123,374,1.601,375,2.907,381,2.285,382,1.487,385,2.469,386,1.487,387,2.072,393,2.577,394,1.886,395,2.201,398,1.487,400,1.487,403,1.664,406,2.183,407,2.183,408,2.183,410,2.072,411,2.072,415,2.072,627,4.61,856,2.309,858,4.076,862,2.456,872,2.309,876,2.456,878,2.456,989,4.354,1004,5.247,1134,2.456,1304,2.855,1361,3.759,1362,3.152,1363,3.152,1364,3.603,1365,3.603,1366,3.603,1367,3.603,1368,3.152,1369,4.904,1370,3.152,1371,3.603,1372,3.844,1373,3.152,1374,4.076,1375,3.603,1376,3.603,1377,3.603,1378,3.603,1379,3.603,1380,3.603,1381,3.603]],["title/modules/SubscribersModule.html",[23,1.026,45,2.834]],["body/modules/SubscribersModule.html",[2,1.937,3,0.149,4,0.132,5,0.1,7,0.294,8,0.012,9,0.829,16,0.149,17,0.25,21,0.009,22,0.009,23,1.813,25,2.224,26,2.306,27,2.489,28,2.489,29,2.306,30,3.394,31,2.489,45,5.512,47,3.111,48,2.489,49,2.394,51,2.489,53,2.7,54,1.457,144,0.647,265,2.82,267,2.146,989,3.099,1040,4.593,1041,4.714,1361,5.371,1372,5.181,1373,4.714,1382,4.714,1383,4.714,1384,5.388,1385,5.388,1386,4.714]],["title/injectables/SubscribersService.html",[110,0.827,1372,2.664]],["body/injectables/SubscribersService.html",[3,0.077,4,0.069,5,0.052,7,0.267,8,0.012,9,0.43,16,0.077,17,0.13,18,1.698,19,1.242,21,0.006,22,0.006,54,0.756,64,1.343,65,1.741,66,1.343,67,1.275,91,2.445,92,1.531,94,2.921,97,3.13,103,1.721,107,1.075,110,0.848,111,1.039,113,0.299,114,1.189,116,0.879,118,1.736,119,1.036,137,2.644,140,2.074,143,2.009,144,0.82,145,0.818,146,1.887,147,3.026,175,1.533,194,1.196,225,2.009,227,3.031,278,3.026,295,2.583,298,1.463,314,1.963,321,2.452,323,1.584,324,1.533,331,1.988,344,1.196,348,2.043,353,2.336,356,2.043,362,2.973,367,1.153,368,1.759,369,1.759,370,1.759,374,1.894,375,2.297,381,2.297,382,1.759,385,1.967,386,1.759,395,2.212,398,1.153,400,1.153,429,2.524,435,1.693,436,1.607,437,1.607,440,1.242,441,3.131,442,1.693,443,1.693,444,1.693,445,1.693,446,1.693,447,1.693,448,1.693,449,1.693,450,1.463,451,2.583,452,2.583,454,2.583,455,1.693,457,1.693,458,1.693,459,1.693,460,1.693,461,1.693,462,1.693,463,1.693,464,1.693,465,2.583,466,1.693,467,1.693,468,1.693,469,3.503,470,1.693,471,2.583,472,3.131,473,1.693,474,1.693,475,2.583,476,1.693,477,1.693,478,1.693,479,1.693,480,1.693,481,1.693,482,1.693,483,1.693,484,2.732,486,2.732,489,1.113,490,1.291,627,4.205,697,2.445,725,1.791,939,2.906,989,2.973,991,2.043,998,2.445,999,3.73,1079,2.043,1166,2.043,1274,2.215,1276,2.215,1363,3.73,1368,3.73,1369,4.474,1372,2.732,1374,3.378,1386,2.445,1387,2.445,1388,2.795,1389,2.795,1390,2.795,1391,2.795,1392,2.795,1393,2.795,1394,2.795,1395,4.263,1396,4.263,1397,2.795,1398,2.795,1399,2.795,1400,2.795,1401,2.795,1402,4.263,1403,2.795,1404,2.795,1405,2.795,1406,2.795,1407,2.795,1408,2.795,1409,2.795]],["title/guards/TestGuard.html",[1410,3.294,1411,3.039]],["body/guards/TestGuard.html",[3,0.155,4,0.138,5,0.104,7,0.256,8,0.012,9,0.865,16,0.155,17,0.261,21,0.01,22,0.01,103,1.475,110,1.376,113,0.602,114,1.929,116,0.754,118,1.568,143,1.722,144,0.676,145,0.701,146,1.618,289,5.482,511,3.467,679,3.835,906,7.021,911,4.921,912,5.329,914,4.716,962,4.111,990,3.604,1188,5.937,1411,5.056,1412,5.624,1413,4.921,1414,5.624]],["title/injectables/TransformInterceptor.html",[110,0.827,1192,3.039]],["body/injectables/TransformInterceptor.html",[3,0.135,4,0.12,5,0.091,7,0.285,8,0.012,9,0.754,16,0.175,17,0.228,18,1.952,21,0.009,22,0.009,59,3.341,103,1.285,110,1.262,111,1.822,113,0.524,114,1.768,116,0.85,118,1.367,119,0.704,143,1.941,144,0.762,145,0.79,146,1.824,156,3.14,185,2.097,403,2.263,429,1.885,535,2.44,679,3.341,727,5.139,826,3.14,908,4.287,909,6.251,912,5.069,914,4.323,926,3.883,990,3.14,1184,3.883,1185,5.548,1186,5.548,1187,6.504,1188,5.571,1189,4.287,1190,4.287,1191,3.582,1192,4.635,1193,6.151,1194,6.151,1195,4.287,1196,4.287,1197,4.287,1198,4.287,1415,4.9,1416,4.9,1417,4.9]],["title/classes/UpdateBy.html",[17,0.193,815,2.664]],["body/classes/UpdateBy.html",[3,0.134,4,0.119,5,0.09,7,0.284,8,0.012,16,0.134,17,0.356,21,0.009,22,0.009,67,1.195,87,1.999,113,0.518,116,0.843,119,1.004,138,1.46,145,0.956,200,1.53,269,1.601,300,3.301,314,2.011,323,1.778,367,1.31,489,1.929,492,1.159,499,2.328,502,2.237,524,3.233,527,2.535,528,2.796,532,3.83,533,1.8,535,2.421,536,1.999,537,2.073,538,2.073,554,2.785,555,2.785,595,3.103,603,2.653,605,2.653,611,4.237,623,3.301,625,4.29,811,4.763,812,5.11,815,4.743,818,2.653,819,3.301,820,2.934,821,4.987,822,2.934,823,2.073,824,3.837,825,3.837,1418,4.842,1419,4.842]],["title/classes/UpdateCompanyDto.html",[17,0.193,390,2.834]],["body/classes/UpdateCompanyDto.html",[3,0.167,4,0.149,5,0.112,7,0.297,8,0.012,16,0.167,17,0.336,21,0.01,22,0.01,200,1.913,367,1.637,372,3.881,390,4.932,399,4.798,492,1.449,531,3.034,533,2.251,563,4.798,818,3.318,820,3.668,823,2.592,1349,4.798,1350,4.426,1420,5.297,1421,6.055]],["title/classes/UpdateFileDto.html",[17,0.193,736,2.834]],["body/classes/UpdateFileDto.html",[3,0.174,4,0.154,5,0.117,7,0.274,8,0.012,16,0.174,17,0.292,21,0.01,22,0.01,200,1.983,367,1.698,492,1.502,569,4.023,571,4.974,736,5.038,751,4.974,818,3.439,823,2.687,1422,5.492,1423,6.277]],["title/classes/UpdateJobDto.html",[17,0.193,864,2.834]],["body/classes/UpdateJobDto.html",[3,0.174,4,0.154,5,0.117,7,0.274,8,0.012,16,0.174,17,0.292,21,0.01,22,0.01,200,1.983,367,1.698,492,1.502,523,4.588,534,3.803,818,3.439,823,2.687,864,5.038,869,4.974,1424,5.492,1425,6.277]],["title/classes/UpdatePermissionDto.html",[17,0.193,1138,2.834]],["body/classes/UpdatePermissionDto.html",[3,0.174,4,0.154,5,0.117,7,0.274,8,0.012,16,0.174,17,0.292,21,0.01,22,0.01,200,1.983,367,1.698,492,1.502,584,4.023,586,4.974,818,3.439,823,2.687,1138,5.038,1142,4.974,1426,5.492,1427,6.277]],["title/classes/UpdateResumeDto.html",[17,0.193,822,2.519]],["body/classes/UpdateResumeDto.html",[3,0.134,4,0.119,5,0.09,7,0.284,8,0.012,16,0.134,17,0.356,21,0.009,22,0.009,67,1.195,87,1.999,113,0.518,116,0.649,119,0.904,138,1.124,145,0.922,200,1.53,269,1.601,300,4.29,314,1.393,323,1.232,367,1.31,489,1.929,492,1.159,499,2.328,502,2.237,524,3.189,527,2.535,528,2.796,532,3.83,533,1.8,535,2.421,536,2.597,537,2.694,538,2.694,554,3.619,555,3.619,564,2.535,595,3.103,603,2.653,605,2.653,623,3.301,625,4.29,633,4.237,811,5.05,812,4.6,815,4.48,818,2.653,819,3.301,820,2.934,821,3.837,822,3.812,823,2.073,824,3.837,825,4.987,1428,4.842,1429,4.842]],["title/classes/UpdateRoleDto.html",[17,0.193,1307,2.834]],["body/classes/UpdateRoleDto.html",[3,0.174,4,0.154,5,0.117,7,0.274,8,0.012,16,0.174,17,0.292,21,0.01,22,0.01,200,1.983,367,1.698,492,1.502,612,4.023,614,4.974,818,3.439,823,2.687,1307,5.038,1310,4.974,1430,5.492,1431,6.277]],["title/classes/UpdateSubscriberDto.html",[17,0.193,1369,2.834]],["body/classes/UpdateSubscriberDto.html",[3,0.174,4,0.154,5,0.117,7,0.274,8,0.012,16,0.174,17,0.292,21,0.01,22,0.01,200,1.983,367,1.698,492,1.502,627,4.023,629,4.974,818,3.439,823,2.687,1369,5.038,1374,4.974,1432,5.492,1433,6.277]],["title/classes/UpdateUserDto.html",[17,0.193,1434,2.834]],["body/classes/UpdateUserDto.html",[3,0.158,4,0.141,5,0.106,7,0.28,8,0.012,16,0.158,17,0.325,21,0.01,22,0.01,113,0.612,116,0.766,119,1.004,138,1.327,145,0.713,189,2.866,192,3.665,225,1.75,269,1.778,314,2.171,320,2.749,367,1.546,492,1.368,524,2.278,528,2.541,531,3.782,533,2.126,547,3.464,820,3.464,823,2.448,1348,5.003,1349,4.531,1350,4.18,1351,5.003,1434,4.764,1435,6.114,1436,5.718]],["title/classes/User.html",[17,0.193,140,1.196]],["body/classes/User.html",[3,0.092,4,0.082,5,0.062,7,0.234,8,0.012,16,0.158,17,0.154,21,0.007,22,0.007,54,0.899,67,1.197,107,2.578,113,0.356,116,1.088,119,1.166,138,1.884,140,1.395,144,0.688,145,1.051,225,1.017,232,4.188,254,2.13,267,1.933,269,1.234,297,2.266,314,1.812,320,2.755,323,1.838,324,2.266,344,2.453,378,2.06,429,1.867,440,2.546,489,2.282,490,2.647,492,0.795,494,3.296,495,3.296,497,3.296,499,2.755,500,5.108,502,3.232,504,3.817,505,4.294,506,4.487,511,2.431,517,2.013,518,2.791,519,2.013,520,3.093,556,3.672,557,3.672,658,2.266,660,2.429,829,1.598,993,2.429,1201,3.845,1202,3.845,1437,2.429,1438,3.323,1439,3.323,1440,3.323,1441,3.323,1442,3.323,1443,3.323,1444,3.323,1445,4.852,1446,3.323,1447,3.323,1448,3.323,1449,3.323,1450,3.323,1451,3.323,1452,3.323,1453,3.323,1454,3.323,1455,4.852,1456,2.908]],["title/classes/UserLoginDto.html",[17,0.193,190,2.519]],["body/classes/UserLoginDto.html",[3,0.094,4,0.084,5,0.063,7,0.236,8,0.012,16,0.16,17,0.328,20,2.911,21,0.007,22,0.007,67,1.217,87,3.318,113,0.364,116,0.661,119,1.163,138,1.145,144,0.812,145,0.879,173,1.863,189,1.704,190,2.989,191,3.517,200,1.074,269,1.255,288,4.097,314,0.978,320,3.652,323,1.794,324,2.432,378,2.616,385,1.074,429,2.45,492,0.814,494,3.663,496,2.726,520,1.455,524,3.294,527,1.78,528,2.58,529,3.721,530,3.721,531,2.91,532,3.181,533,1.264,535,3.152,536,3.363,537,3.442,538,3.442,547,2.06,550,4.244,551,2.485,552,2.837,553,3.363,554,2.837,555,2.837,556,4.082,557,4.082,558,2.06,559,3.606,560,3.606,561,3.606,1457,4.933,1458,3.4,1459,3.4]],["title/controllers/UsersController.html",[0,1.196,1460,3.039]],["body/controllers/UsersController.html",[0,0.998,2,0.998,3,0.096,4,0.085,5,0.064,7,0.283,8,0.012,9,0.533,16,0.096,17,0.161,20,1.432,21,0.007,22,0.007,65,1.168,94,2.752,103,1.788,113,0.371,114,1.396,116,0.913,118,1.901,119,1.186,127,1.668,137,2.787,138,1.582,140,2.435,143,2.087,144,0.853,145,0.85,146,1.961,178,2.508,179,2.406,182,3.035,184,1.668,185,1.485,189,3.559,192,3.763,199,1.816,200,1.096,223,2.365,275,3.218,320,1.668,323,0.882,331,1.926,367,1.588,368,2.424,369,2.066,370,2.066,374,1.542,375,2.857,377,4.379,379,3.413,381,2.224,382,1.432,385,2.031,386,1.432,387,1.995,393,2.508,394,1.816,395,2.143,398,1.432,400,1.432,403,1.602,406,2.102,407,2.102,408,2.102,410,1.995,411,1.995,415,1.995,856,2.223,862,2.365,872,2.223,876,2.365,878,2.365,1134,2.365,1304,2.749,1346,2.365,1370,3.035,1411,2.536,1434,4.842,1460,3.659,1461,3.035,1462,4.379,1463,3.035,1464,3.469,1465,3.469,1466,3.469,1467,3.469,1468,3.035,1469,3.469,1470,3.469,1471,3.035,1472,3.469,1473,3.035,1474,3.035,1475,3.469,1476,3.469,1477,3.469,1478,3.469,1479,3.469,1480,3.469,1481,3.469,1482,3.469,1483,3.469,1484,3.469,1485,3.469,1486,3.469]],["title/modules/UsersModule.html",[23,1.026,46,2.664]],["body/modules/UsersModule.html",[2,1.873,3,0.141,4,0.126,5,0.095,7,0.296,8,0.012,9,0.785,16,0.141,17,0.237,21,0.009,22,0.009,23,1.769,25,2.108,26,2.186,27,2.359,28,2.359,29,2.186,30,3.311,31,3.311,46,5.194,47,3.008,48,2.359,49,2.269,51,2.359,53,2.559,54,1.381,140,1.469,144,0.782,254,4.173,265,3.409,266,4.047,267,2.594,275,4.629,324,1.836,657,4.173,658,3.482,660,3.733,1460,5.24,1471,4.468,1487,4.468,1488,4.468,1489,5.107,1490,5.107,1491,5.107,1492,4.468]],["title/injectables/UsersService.html",[110,0.827,275,2.278]],["body/injectables/UsersService.html",[3,0.055,4,0.048,5,0.037,7,0.261,8,0.012,9,0.303,16,0.055,17,0.092,18,1.288,19,1.437,21,0.004,22,0.004,54,0.533,64,0.948,65,1.601,66,0.948,67,1.014,92,1.08,94,2.55,97,3.148,103,1.85,107,0.758,110,0.643,111,0.733,113,0.211,114,0.902,116,0.928,118,1.734,119,1.111,135,2.562,137,2.383,140,2.029,143,1.971,144,0.847,145,0.803,146,1.852,147,2.952,172,2.829,173,3.09,175,1.478,189,2.827,192,2.634,225,2.159,227,3.258,232,3.476,269,0.823,275,1.772,277,2.562,278,3.118,288,1.959,290,2.634,291,2.634,295,2.49,297,1.344,298,1.032,299,1.562,312,1.441,314,1.993,320,2.864,321,1.86,323,1.686,324,1.888,331,1.244,344,1.384,353,2.252,355,2.829,362,2.364,367,0.874,368,1.335,369,1.697,370,1.335,374,1.437,375,1.827,381,1.827,382,1.335,385,1.658,386,1.335,395,1.759,398,0.814,400,0.814,429,2.17,435,1.194,436,1.134,437,1.134,440,0.876,441,1.959,442,1.194,443,1.194,444,1.194,445,1.194,446,1.194,447,1.194,448,1.194,449,1.194,450,2.748,451,1.959,452,1.959,454,1.959,455,1.194,457,1.194,458,1.194,459,1.194,460,1.194,461,1.194,462,1.194,463,1.194,464,1.194,465,1.959,466,1.194,467,1.194,468,1.194,469,2.881,470,1.194,471,1.959,472,1.959,473,1.194,474,1.194,475,1.959,476,1.194,477,1.194,478,1.194,479,1.194,480,1.194,481,1.194,482,1.194,483,1.194,484,2.072,486,2.072,489,0.785,490,0.911,658,1.344,664,1.725,666,3.257,674,1.344,677,2.363,681,1.562,707,1.562,710,2.829,725,2.072,939,3.242,1037,2.634,1282,3.596,1283,4.47,1344,1.725,1346,1.344,1434,3.845,1463,2.829,1468,2.829,1473,1.725,1474,1.725,1492,1.725,1493,1.725,1494,4.11,1495,4.11,1496,4.11,1497,3.233,1498,3.233,1499,1.972,1500,4.11,1501,1.972,1502,1.972,1503,1.972,1504,3.233,1505,1.972,1506,3.233,1507,6.219,1508,1.972,1509,1.972,1510,1.972,1511,1.972,1512,1.972,1513,1.972,1514,1.972,1515,1.972,1516,1.972,1517,1.972,1518,1.972,1519,1.725,1520,1.972,1521,4.755,1522,3.233,1523,3.233,1524,3.233,1525,3.233,1526,3.233,1527,1.972,1528,3.233,1529,1.972,1530,3.233,1531,3.233,1532,1.972,1533,3.233,1534,1.972,1535,3.233,1536,1.972,1537,1.972,1538,1.972,1539,1.972,1540,1.972,1541,3.233,1542,1.972,1543,1.972,1544,1.725,1545,1.972,1546,4.11,1547,1.972,1548,3.233,1549,1.972,1550,1.972,1551,1.972,1552,1.972]],["title/coverage.html",[1553,4.504]],["body/coverage.html",[0,2.149,1,1.809,5,0.072,6,2.165,8,0.012,10,1.586,14,1.424,17,0.386,21,0.005,22,0.005,29,1.059,60,1.809,110,1.559,112,2.165,125,1.809,126,2.165,137,0.89,140,1.116,145,0.308,156,1.586,173,1.356,175,0.89,183,1.424,184,1.19,186,1.809,189,1.24,190,1.499,191,3.284,195,1.356,242,1.687,243,1.687,254,1.586,268,2.165,275,1.356,324,0.89,364,1.809,365,2.165,372,1.586,378,1.721,390,1.687,396,1.586,421,1.809,424,2.165,493,2.837,522,3.075,523,3.499,534,1.499,547,3.784,562,2.165,563,3.075,569,1.586,570,2.165,571,3.075,584,1.586,585,2.165,586,3.075,593,1.586,594,3.075,595,3.773,603,1.356,612,1.586,613,2.165,614,3.075,621,1.059,627,1.586,628,2.165,629,3.075,645,1.809,646,2.165,648,1.586,655,1.586,657,1.586,661,2.165,675,1.961,676,1.961,677,1.809,691,6.362,728,2.165,729,1.809,730,2.165,736,1.687,749,1.586,780,1.809,783,2.165,794,1.809,795,2.165,811,1.499,812,3.499,815,1.586,822,1.499,826,2.487,828,2.165,829,1.19,830,2.837,850,1.687,852,1.809,853,2.165,864,1.687,867,1.586,886,2.165,904,2.165,905,3.075,921,1.961,948,2.165,968,2.165,970,2.165,977,1.809,978,2.165,984,1.586,989,1.424,1040,1.687,1057,2.165,1058,2.165,1116,2.837,1130,1.809,1131,2.165,1138,1.687,1140,1.586,1155,2.165,1184,3.075,1191,1.809,1192,1.809,1199,1.499,1200,2.837,1221,1.809,1223,1.809,1224,2.165,1237,1.586,1255,2.165,1284,2.837,1298,1.809,1299,2.165,1307,1.687,1325,2.165,1346,1.687,1347,2.165,1352,2.837,1361,1.809,1362,2.165,1369,1.687,1372,1.586,1387,2.165,1410,1.961,1411,1.809,1413,2.165,1420,2.165,1422,2.165,1424,2.165,1426,2.165,1430,2.165,1432,2.165,1434,1.687,1435,2.165,1437,2.837,1460,1.809,1461,2.165,1493,2.165,1553,1.961,1554,2.165,1555,2.475,1556,2.475,1557,8.236,1558,6.246,1559,5.42,1560,6.53,1561,6.53,1562,6.952,1563,6.53,1564,4.787,1565,3.881,1566,7.643,1567,4.188,1568,5.15,1569,2.475,1570,2.165,1571,2.475,1572,4.787,1573,2.475,1574,3.881,1575,2.475,1576,2.475,1577,2.475]],["title/dependencies.html",[26,2.141,1578,3.033]],["body/dependencies.html",[8,0.012,9,0.774,13,2.757,17,0.3,21,0.009,22,0.009,26,2.154,54,1.361,59,3.431,64,2.419,65,1.695,66,2.419,67,1.591,78,3.988,81,3.988,187,3.988,193,2.894,200,1.59,247,3.225,250,3.988,252,3.988,305,5.204,395,2.154,436,2.894,437,2.894,527,2.634,533,1.871,753,3.678,803,3.988,820,3.049,956,4.402,987,3.678,988,3.988,990,3.225,1350,3.678,1519,4.402,1579,5.032,1580,7.12,1581,5.032,1582,5.032,1583,5.032,1584,6.451,1585,5.032,1586,5.032,1587,5.032,1588,5.032,1589,5.032,1590,5.032,1591,5.032,1592,5.032,1593,5.032,1594,5.032,1595,5.032,1596,5.032,1597,5.032,1598,5.032,1599,5.032,1600,5.032,1601,5.032,1602,5.032,1603,5.032,1604,5.032,1605,5.032,1606,5.032,1607,5.032,1608,5.032,1609,5.032,1610,5.032,1611,5.032,1612,5.032,1613,5.032]],["title/miscellaneous/functions.html",[1614,2.222,1615,4.377]],["body/miscellaneous/functions.html",[8,0.01,21,0.01,22,0.01,29,3.432,113,0.706,1570,5.774,1614,4.229,1615,5.774,1616,6.599]],["title/index.html",[113,0.371,1617,3.467,1618,3.467]],["body/index.html",[4,0.094,8,0.011,21,0.007,22,0.007,49,3.255,141,3.333,329,3.333,496,1.631,698,3.333,792,3.333,797,5.805,829,2.572,854,2.785,930,3.333,987,5.613,1019,5.315,1036,3.019,1093,3.333,1166,3.911,1544,3.333,1553,3.019,1554,4.681,1619,3.81,1620,3.81,1621,6.184,1622,5.351,1623,3.81,1624,3.81,1625,3.81,1626,5.351,1627,6.184,1628,3.81,1629,3.81,1630,3.81,1631,6.707,1632,3.81,1633,7.68,1634,3.81,1635,7.524,1636,3.81,1637,3.81,1638,3.81,1639,5.351,1640,3.81,1641,5.351,1642,3.81,1643,6.184,1644,3.81,1645,5.351,1646,3.81,1647,3.81,1648,3.81,1649,3.81,1650,6.707,1651,7.325,1652,3.81,1653,5.351,1654,3.81,1655,3.81,1656,3.81,1657,3.81,1658,3.81,1659,5.351,1660,6.707,1661,5.351,1662,3.81,1663,5.351,1664,7.325,1665,6.707,1666,3.81,1667,5.351,1668,3.81,1669,3.81,1670,3.81,1671,3.81,1672,6.707,1673,3.81,1674,3.81,1675,3.81,1676,3.81,1677,5.351,1678,3.81,1679,3.81,1680,3.81,1681,3.81,1682,3.81,1683,5.351,1684,3.81,1685,3.81,1686,3.81,1687,5.351,1688,3.81,1689,3.81,1690,3.81,1691,3.81,1692,3.81,1693,3.81,1694,3.81,1695,3.81,1696,3.81,1697,3.81,1698,5.351,1699,3.81,1700,3.333,1701,3.81,1702,3.81,1703,6.184,1704,3.81,1705,3.81,1706,3.81,1707,3.81,1708,5.351,1709,3.81,1710,3.81,1711,3.81,1712,3.81,1713,3.81,1714,3.81,1715,5.351,1716,5.351,1717,3.81,1718,3.81,1719,3.81,1720,3.81,1721,3.81,1722,3.81,1723,3.81,1724,3.81,1725,3.81,1726,3.81,1727,3.333,1728,3.81,1729,3.81,1730,3.81,1731,3.81,1732,3.81,1733,3.81,1734,3.333]],["title/modules.html",[25,2.346]],["body/modules.html",[8,0.009,21,0.009,22,0.009,24,4.077,25,2.302,35,3.803,36,3.803,37,3.803,38,3.803,39,3.803,40,3.803,41,3.575,42,3.803,43,3.803,44,3.575,45,3.803,46,3.575,1019,6.774,1700,4.88,1735,8.548,1736,8.548,1737,8.58,1738,5.578]],["title/overview.html",[1739,4.973]],["body/overview.html",[2,1.09,8,0.012,10,3.951,14,4.321,21,0.007,22,0.007,23,0.935,24,6.26,25,1.564,26,1.622,27,1.75,28,1.75,29,1.622,30,1.75,31,1.75,32,3.315,33,3.315,34,3.315,35,5.578,36,4.807,37,5.122,38,4.807,39,4.204,40,4.807,41,4.518,42,4.807,43,4.807,44,4.814,45,4.807,46,4.814,47,2.462,48,1.75,49,1.684,111,1.409,195,4.116,238,3.315,240,3.315,241,3.315,242,4.204,243,4.204,275,4.202,301,3.003,396,3.951,417,3.315,418,3.315,450,1.983,492,0.907,648,3.951,651,3.315,652,3.315,749,3.951,775,3.315,776,3.315,827,3.003,867,3.951,880,3.315,881,3.315,984,3.951,1031,3.315,1032,3.315,1140,3.951,1150,3.315,1151,3.315,1237,3.951,1249,3.315,1250,3.315,1318,3.315,1319,3.315,1320,3.315,1372,3.951,1382,3.315,1383,3.315,1410,3.003,1487,3.315,1488,3.315,1739,3.315,1740,5.33,1741,3.789,1742,3.789]],["title/properties.html",[269,1.273,1578,3.033]],["body/properties.html",[8,0.012,21,0.01,22,0.01,269,1.647,496,2.771,717,5.665,718,5.665,1727,5.665,1734,5.665,1743,6.475,1744,6.475,1745,6.475,1746,6.475]],["title/miscellaneous/typealiases.html",[1614,2.222,1747,5.003]],["body/miscellaneous/typealiases.html",[8,0.01,21,0.01,22,0.01,113,0.642,145,0.748,297,4.906,434,5.703,493,4.387,518,4.825,673,5.26,674,4.906,830,4.387,849,5.26,991,5.26,1116,4.387,1200,4.387,1218,5.703,1284,4.387,1352,4.387,1437,4.387,1614,3.847,1748,6.002,1749,5.251,1750,5.251,1751,5.251,1752,5.251,1753,5.251,1754,5.251,1755,5.251]],["title/miscellaneous/variables.html",[1614,2.222,1756,4.377]],["body/miscellaneous/variables.html",[5,0.025,8,0.012,21,0.003,22,0.003,23,1.876,65,2.039,103,0.346,107,0.508,113,0.141,119,0.656,140,1.691,144,0.913,145,0.518,171,0.965,179,2.502,183,1.324,184,1.106,225,0.704,254,1.475,290,4.15,291,4.15,314,2.372,318,2.175,322,6.652,323,1.943,324,1.317,331,1.756,344,3.255,366,3.636,367,1.234,378,1.494,379,3.112,385,1.442,393,2.288,421,1.682,440,3.379,489,0.526,493,0.965,495,4.373,497,4.373,499,3.655,521,1.155,535,0.885,587,4.873,588,5.184,605,0.723,621,1.779,655,1.475,657,1.475,675,1.824,676,1.824,677,1.682,691,5.557,719,6.683,727,1.682,731,1.046,741,1.155,829,1.998,830,0.965,850,1.569,851,1.155,854,3.038,912,0.9,921,1.824,924,1.155,962,5.557,1040,1.569,1116,0.965,1129,1.155,1191,2.237,1199,2.518,1200,0.965,1221,1.682,1222,1.155,1225,4.296,1284,0.965,1297,1.155,1300,3.994,1352,0.965,1360,1.155,1437,0.965,1456,1.155,1462,3.636,1567,1.155,1568,1.155,1614,0.846,1749,1.155,1750,1.155,1751,1.155,1752,1.155,1753,1.155,1754,1.155,1755,1.155,1756,1.155,1757,3.06,1758,4.156,1759,1.32,1760,1.32,1761,2.301,1762,7.639,1763,8.236,1764,8.236,1765,1.32,1766,1.32,1767,7.603,1768,1.32,1769,2.301,1770,1.32,1771,3.06,1772,2.301,1773,1.32,1774,2.301,1775,1.32,1776,2.301,1777,1.32,1778,2.301,1779,2.301,1780,1.32,1781,3.06,1782,2.301,1783,1.32,1784,2.301,1785,1.32,1786,2.301,1787,1.32,1788,2.301,1789,1.32,1790,1.32,1791,1.32,1792,2.301,1793,1.32,1794,2.301,1795,2.301,1796,1.32,1797,3.06,1798,2.301,1799,1.32,1800,2.301,1801,1.32,1802,2.301,1803,1.32,1804,2.301,1805,1.32,1806,2.301,1807,2.301,1808,1.32,1809,4.565,1810,2.301,1811,1.32,1812,3.06,1813,2.301,1814,1.32,1815,2.301,1816,1.32,1817,2.301,1818,1.32,1819,1.32,1820,2.301,1821,1.32,1822,2.301,1823,2.301,1824,1.32,1825,2.301,1826,1.32,1827,3.06,1828,2.301,1829,1.32,1830,2.301,1831,1.32,1832,2.301,1833,1.32,1834,2.301,1835,2.301,1836,1.32,1837,2.301,1838,1.32,1839,3.06,1840,2.301,1841,1.32,1842,2.301,1843,1.32,1844,2.301,1845,1.32,1846,1.32,1847,1.32,1848,1.32,1849,1.32,1850,1.32,1851,1.32,1852,1.32]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":691,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1744,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["0.10",{"_index":1002,"title":{},"body":{"controllers/MailController.html":{}}}],["0.14.0",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":450,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["1.0.0",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.0",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":764,"title":{},"body":{"controllers/FilesController.html":{}}}],["123456",{"_index":561,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["13",{"_index":1740,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1741,"title":{},"body":{"overview.html":{}}}],["2",{"_index":301,"title":{"classes/Company-2.html":{}},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["2.0.2",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":1742,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["6.9.3",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["60)@apibody({type",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["60s",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.0.0",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["96",{"_index":720,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["__v",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["access",{"_index":946,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["access_token",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1551,"title":{},"body":{"injectables/UsersService.html":{}}}],["action",{"_index":790,"title":{},"body":{"injectables/FilesService.html":{}}}],["adapter",{"_index":1052,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":705,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["addfiletypevalidator",{"_index":759,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":762,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":494,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["adds",{"_index":791,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":696,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["admin@gmail.com",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["admin_role",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":706,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":716,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["again",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["age",{"_index":556,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["aliases",{"_index":1748,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":1678,"title":{},"body":{"index.html":{}}}],["already",{"_index":725,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["amazing",{"_index":1721,"title":{},"body":{"index.html":{}}}],["another",{"_index":1526,"title":{},"body":{"injectables/UsersService.html":{}}}],["api",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":587,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":550,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":401,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('files",{"_index":754,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":870,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":996,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1143,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1239,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1311,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscribers",{"_index":1375,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1475,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1025,"title":{},"body":{"controllers/MailController.html":{}}}],["app.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1651,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1626,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":24,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":931,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["array",{"_index":623,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{}}}],["array'})@validatenested()@type(undefined",{"_index":1428,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["async",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":905,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":910,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:18",{"_index":913,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":916,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":125,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":920,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":922,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":969,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1727,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":14,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1738,"title":{},"body":{"modules.html":{}}}],["await",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":1667,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1722,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('cannot",{"_index":1344,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('not",{"_index":1276,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["badrequestexception('refresh",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(`not",{"_index":485,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["ban",{"_index":1406,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["based",{"_index":930,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["basename",{"_index":1112,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1519,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":933,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["board",{"_index":1714,"title":{},"body":{"index.html":{}}}],["body",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["body('email",{"_index":1477,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('name",{"_index":1479,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('password",{"_index":1478,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('status",{"_index":1246,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":511,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"guards/TestGuard.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":684,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1087,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1737,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1735,"title":{},"body":{"modules.html":{}}}],["build",{"_index":766,"title":{},"body":{"controllers/FilesController.html":{},"controllers/MailController.html":{}}}],["building",{"_index":1622,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":693,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bản",{"_index":471,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["callhandler",{"_index":1187,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":906,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/TestGuard.html":{}}}],["canactivate(context",{"_index":911,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/TestGuard.html":{}}}],["case",{"_index":1082,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":1099,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1103,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["channel",{"_index":1691,"title":{},"body":{"index.html":{}}}],["chay",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["check",{"_index":797,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["chi",{"_index":704,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["class",{"_index":17,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":492,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["clicks",{"_index":1677,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1662,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":417,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":418,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":651,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":652,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":775,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":776,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":880,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":881,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1031,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1032,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1150,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1151,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1249,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1250,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1318,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1320,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1319,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1382,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1383,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1487,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1488,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1489,"title":{},"body":{"modules/UsersModule.html":{}}}],["co",{"_index":825,"title":{},"body":{"classes/History.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{}}}],["come",{"_index":1684,"title":{},"body":{"index.html":{}}}],["companies",{"_index":366,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":420,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":397,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":364,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":36,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":396,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":378,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":399,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":563,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:12",{"_index":565,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:17",{"_index":566,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:22",{"_index":567,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:7",{"_index":568,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":423,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":596,"title":{},"body":{"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":421,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1518,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1545,"title":{},"body":{"injectables/UsersService.html":{}}}],["configfactory",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["configmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{}}}],["configmodule.forroot",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["configservice.get",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('email_auth_pass",{"_index":1048,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1047,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_host",{"_index":1045,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1056,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":964,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('mongodb_uri",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1026,"title":{},"body":{"controllers/MailController.html":{}}}],["connection",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1096,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1076,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log(user",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":971,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":950,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":887,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1156,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":403,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":908,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1257,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1326,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1388,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":664,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1091,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":914,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":927,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":926,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":932,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1197,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":402,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":650,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":755,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":804,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":871,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":997,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1144,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1240,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1312,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1376,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1476,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["cookies",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["countpermission",{"_index":687,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":689,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":685,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["courses",{"_index":1697,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1553,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":404,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["create(createcompanydto",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":784,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":855,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1132,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createresumedto",{"_index":1227,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createroledto",{"_index":1301,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1363,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createuserdto",{"_index":1463,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":372,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1078,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":569,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":534,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1060,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":584,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createpermissiondto.apipath",{"_index":1164,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createpermissiondto.method",{"_index":1165,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createrefreshtoken",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumecvdto",{"_index":593,"title":{"classes/CreateResumeCvDto.html":{}},"body":{"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createresumedto",{"_index":603,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":612,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":1333,"title":{},"body":{"injectables/RolesService.html":{}}}],["createsubscriberdto",{"_index":627,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createsubscriberdto.email",{"_index":1396,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createuserdto",{"_index":189,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/ShowUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":1535,"title":{},"body":{"injectables/UsersService.html":{}}}],["cron",{"_index":994,"title":{},"body":{"controllers/MailController.html":{}}}],["cron('0",{"_index":1001,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":995,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":464,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":381,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["cute",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["da",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/SubscribersService.html":{}}}],["dang",{"_index":555,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{}}}],["dang'})@isnotempty({message",{"_index":639,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["data",{"_index":727,"title":{},"body":{"injectables/DatabasesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":647,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":654,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":649,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":645,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":37,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":648,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":502,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{}}}],["date.now()}${extname",{"_index":1115,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":805,"title":{},"body":{"controllers/HealthController.html":{}}}],["de",{"_index":538,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{}}}],["declarations",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":120,"title":{},"body":{"injectables/AppService.html":{}}}],["decorators",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":1693,"title":{},"body":{"index.html":{}}}],["default",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":451,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":387,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":862,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":495,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":490,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1095,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":26,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1650,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1666,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1659,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1676,"title":{},"body":{"index.html":{}}}],["description",{"_index":496,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"classes/UserLoginDto.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":1098,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["development",{"_index":1636,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1704,"title":{},"body":{"index.html":{}}}],["dinh",{"_index":554,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{}}}],["dir",{"_index":1049,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1086,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["discord",{"_index":1690,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":1071,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dive",{"_index":1692,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1554,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":398,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/show",{"_index":1474,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":400,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dung",{"_index":553,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["duoc",{"_index":537,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{}}}],["dân",{"_index":718,"title":{},"body":{"injectables/DatabasesService.html":{},"properties.html":{}}}],["e2e",{"_index":1646,"title":{},"body":{"index.html":{}}}],["each",{"_index":620,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["eexist",{"_index":1083,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["efficient",{"_index":1623,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1657,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email')@cron('0",{"_index":982,"title":{},"body":{"controllers/MailController.html":{}}}],["enddate",{"_index":545,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["endpoint",{"_index":947,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["enotdir",{"_index":1088,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensure",{"_index":1655,"title":{},"body":{"index.html":{}}}],["ensureexists",{"_index":1061,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1064,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enterprise",{"_index":1707,"title":{},"body":{"index.html":{}}}],["err",{"_index":917,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["error.code",{"_index":1081,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":767,"title":{},"body":{"controllers/FilesController.html":{}}}],["example",{"_index":559,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["exception",{"_index":929,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exclude",{"_index":1542,"title":{},"body":{"injectables/UsersService.html":{}}}],["exec",{"_index":462,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":912,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":1079,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["exits",{"_index":1523,"title":{},"body":{"injectables/UsersService.html":{}}}],["experience",{"_index":1695,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":739,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":823,"title":{},"body":{"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/ShowUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":1107,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1108,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":954,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":960,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":962,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"guards/TestGuard.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1670,"title":{},"body":{"index.html":{}}}],["features",{"_index":1680,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["few",{"_index":1672,"title":{},"body":{"index.html":{}}}],["field",{"_index":1543,"title":{},"body":{"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":742,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":751,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":571,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":769,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":752,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":744,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":731,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":778,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":750,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":729,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":38,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":749,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":760,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":447,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":448,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1114,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":1281,"title":{},"body":{"injectables/ResumesService.html":{}}}],["find(filter",{"_index":457,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyusers",{"_index":1256,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyusers(user",{"_index":1262,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":411,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":382,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1497,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1504,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":1494,"title":{},"body":{"injectables/UsersService.html":{}}}],["focus",{"_index":1679,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1100,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["follow",{"_index":1710,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":918,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception('you",{"_index":944,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["form",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":486,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["foundrole",{"_index":1341,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1343,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1548,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1550,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":1621,"title":{},"body":{"index.html":{}}}],["fs",{"_index":1070,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1074,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":698,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["function",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1615,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1675,"title":{},"body":{"index.html":{}}}],["gan",{"_index":965,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["gender",{"_index":557,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["gensaltsync",{"_index":1516,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1532,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/account')@responsemessage('get",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/logout",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/logout')@responsemessage('logout",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":410,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public",{"_index":383,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":860,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{}}}],["get(':id')@responsemessage('get",{"_index":1304,"title":{},"body":{"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get('profile",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('profile1",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public()@healthcheck",{"_index":798,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('fetch",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["get()@public()@responsemessage('test",{"_index":981,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1134,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["getaccount",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccount(@user",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccount(user",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethashpassword",{"_index":1495,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["getprofile",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile1",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile1(@request",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile1(req",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["getresumesbyuser",{"_index":1226,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumesbyuser(@user",{"_index":1242,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumesbyuser(user",{"_index":1231,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getrootpath",{"_index":1059,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getting",{"_index":1617,"title":{"index.html":{}},"body":{}}],["ghi",{"_index":472,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["graph",{"_index":1700,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":1718,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1410,"title":{"guards/TestGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1412,"title":{},"body":{"guards/TestGuard.html":{}}}],["handlebars",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1038,"title":{},"body":{"modules/MailModule.html":{}}}],["handlelogin",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(@req",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(user",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":907,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":915,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":980,"title":{},"body":{"controllers/MailController.html":{}}}],["hands",{"_index":1694,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1685,"title":{},"body":{"index.html":{}}}],["hash",{"_index":1533,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1507,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1517,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1534,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":934,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["health",{"_index":796,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":809,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":800,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":801,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":794,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":39,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":121,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1698,"title":{},"body":{"index.html":{}}}],["here",{"_index":1725,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":1090,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":811,"title":{"classes/History.html":{}},"body":{"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["hiện",{"_index":466,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["hoidanit@gmail.com",{"_index":719,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":1044,"title":{},"body":{"modules/MailModule.html":{}}}],["httponly",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://hoidanit.com.vn",{"_index":1745,"title":{},"body":{"properties.html":{}}}],["https://nestjs.com",{"_index":1731,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":748,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":518,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hỏi",{"_index":717,"title":{},"body":{"injectables/DatabasesService.html":{},"properties.html":{}}}],["i'm",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":385,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id'})@isarray({message",{"_index":622,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["identifier",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":961,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1106,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1110,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":113,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["infrastructure",{"_index":1682,"title":{},"body":{"index.html":{}}}],["init",{"_index":726,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":110,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":895,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1267,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":998,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":1674,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1634,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1701,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1193,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1416,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":826,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":827,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["invalid",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["is_public_key",{"_index":921,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":546,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{}}}],["isarray",{"_index":625,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{}}}],["isboolean",{"_index":626,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["isdefined",{"_index":551,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isdeleted",{"_index":497,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":528,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/ShowUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isexist",{"_index":939,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isglobal",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":552,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty",{"_index":524,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/ShowUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty()@isemail",{"_index":1419,"title":{},"body":{"classes/UpdateBy.html":{}}}],["isnotempty({message",{"_index":564,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{}}}],["isnotemptyobject",{"_index":529,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":572,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isobject",{"_index":530,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isoptional",{"_index":1348,"title":{},"body":{"classes/ShowUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["ispublic",{"_index":924,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":531,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/ShowUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1457,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isvalid",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1498,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1506,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1085,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item.company.name",{"_index":1014,"title":{},"body":{"controllers/MailController.html":{}}}],["item.name",{"_index":1013,"title":{},"body":{"controllers/MailController.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1015,"title":{},"body":{"controllers/MailController.html":{}}}],["item.skills",{"_index":1016,"title":{},"body":{"controllers/MailController.html":{}}}],["iuser",{"_index":137,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":477,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["job",{"_index":829,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["job._id",{"_index":897,"title":{},"body":{"injectables/JobsService.html":{}}}],["job.createdat",{"_index":898,"title":{},"body":{"injectables/JobsService.html":{}}}],["job.dto",{"_index":869,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":523,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:13",{"_index":525,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:16",{"_index":526,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:22",{"_index":579,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:27",{"_index":582,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:33",{"_index":573,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:38",{"_index":578,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:43",{"_index":581,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:48",{"_index":580,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:53",{"_index":577,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:58",{"_index":574,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:63",{"_index":583,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:68",{"_index":575,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:73",{"_index":576,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":885,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":849,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":597,"title":{},"body":{"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":889,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":854,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":883,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":868,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":850,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":852,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":40,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":867,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":1009,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map((item",{"_index":1012,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills?.length",{"_index":1011,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1036,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["join(__dirname",{"_index":1050,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1104,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|jpeg|png|gif|txt|doc|docx|pdf",{"_index":761,"title":{},"body":{"controllers/FilesController.html":{}}}],["jwt",{"_index":956,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_access_token_secret",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":60,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":959,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":242,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1728,"title":{},"body":{"index.html":{}}}],["key",{"_index":1652,"title":{},"body":{"index.html":{}}}],["khong",{"_index":536,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{}}}],["kiện",{"_index":478,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["kết",{"_index":482,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["la",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{}}}],["lan",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["learn",{"_index":1688,"title":{},"body":{"index.html":{}}}],["legend",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":543,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["license",{"_index":1734,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1716,"title":{},"body":{"index.html":{}}}],["limit",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":459,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":1712,"title":{},"body":{"index.html":{}}}],["list",{"_index":377,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["literal",{"_index":504,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["local",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":186,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":243,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":540,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":662,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":670,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login')@post('/login",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":498,"title":{},"body":{"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Role.html":{}}}],["logout",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":1661,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1709,"title":{},"body":{"index.html":{}}}],["lượng",{"_index":470,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["lấy",{"_index":473,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mail",{"_index":979,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1034,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":985,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":977,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1035,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1042,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":986,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":41,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":984,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["makes",{"_index":1668,"title":{},"body":{"index.html":{}}}],["male",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["managing",{"_index":1681,"title":{},"body":{"index.html":{}}}],["map",{"_index":1189,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1196,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":455,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mau",{"_index":1664,"title":{},"body":{"index.html":{}}}],["maxage",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{}}}],["mb",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":535,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":463,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":588,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mimi",{"_index":123,"title":{},"body":{"injectables/AppService.html":{}}}],["mimicute",{"_index":560,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["miscellaneous",{"_index":1614,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1715,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1639,"title":{},"body":{"index.html":{}}}],["model",{"_index":1515,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":23,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":25,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":988,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1039,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":558,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mongoose",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1219,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":520,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":484,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mongoosehealthindicator",{"_index":802,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1660,"title":{},"body":{"index.html":{}}}],["ms",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_expire",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1072,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":781,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":780,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":779,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":782,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1063,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1069,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":1729,"title":{},"body":{"index.html":{}}}],["name",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":1705,"title":{},"body":{"index.html":{}}}],["nem",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["nest",{"_index":1627,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1733,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1186,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":987,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1350,"title":{},"body":{"classes/ShowUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":753,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":803,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["neu",{"_index":1405,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["new",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":1194,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1195,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nguoi",{"_index":700,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nice",{"_index":1024,"title":{},"body":{"controllers/MailController.html":{}}}],["node.js",{"_index":1620,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":721,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["normal_user",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1633,"title":{},"body":{"index.html":{}}}],["null",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":506,"title":{},"body":{"classes/Company.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["objuser",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1188,"title":{},"body":{"interfaces/Response.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["offer",{"_index":1713,"title":{},"body":{"index.html":{}}}],["official",{"_index":1665,"title":{},"body":{"index.html":{}}}],["offset",{"_index":449,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1349,"title":{},"body":{"classes/ShowUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1351,"title":{},"body":{"classes/ShowUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["onmoduledestroy",{"_index":671,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["onmoduleinit",{"_index":663,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["open",{"_index":1717,"title":{},"body":{"index.html":{}}}],["optional",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1053,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["override",{"_index":1021,"title":{},"body":{"controllers/MailController.html":{}}}],["overview",{"_index":1739,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1578,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":474,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":468,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":858,"title":{},"body":{"controllers/JobsController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["param",{"_index":394,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":413,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["parameters",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1089,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":747,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1706,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":818,"title":{},"body":{"classes/History.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createcompanydto",{"_index":1421,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1423,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1425,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1427,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":824,"title":{},"body":{"classes/History.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1431,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1433,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":957,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":958,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/ShowUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":393,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":391,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":865,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["patch()@responsemessage('update",{"_index":1370,"title":{},"body":{"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["path",{"_index":1037,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1113,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1109,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1269,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":621,"title":{"classes/Permission.html":{}},"body":{"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission._id",{"_index":1168,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permission.apipath",{"_index":942,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.createdat",{"_index":1169,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permission.dto",{"_index":1142,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":586,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:12",{"_index":589,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:17",{"_index":590,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:22",{"_index":591,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:7",{"_index":592,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":941,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":659,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1153,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find",{"_index":940,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1141,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":655,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"modules/RolesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1130,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":42,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1140,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["permit",{"_index":945,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["phai",{"_index":634,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["phần",{"_index":480,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["platform",{"_index":1663,"title":{},"body":{"index.html":{}}}],["please",{"_index":1166,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"index.html":{}}}],["pls",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["plugin",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1282,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":461,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["possible",{"_index":1658,"title":{},"body":{"index.html":{}}}],["post",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('/login",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1232,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('upload",{"_index":756,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":856,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1055,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1073,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":1641,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1619,"title":{},"body":{"index.html":{}}}],["project",{"_index":1631,"title":{},"body":{"index.html":{}}}],["projection",{"_index":444,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/TestGuard.html":{}}}],["prop",{"_index":500,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1445,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":505,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["properties",{"_index":269,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/refresh')@responsemessage('get",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@get('profile",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":740,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@responsemessage('register",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(localauthguard)@useguards(throttlerguard)@throttle(5",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1105,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1279,"title":{},"body":{"injectables/ResumesService.html":{}}}],["put",{"_index":1470,"title":{},"body":{"controllers/UsersController.html":{}}}],["qs",{"_index":375,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["qu",{"_index":483,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":542,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["query",{"_index":395,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":407,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":408,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["questions",{"_index":1689,"title":{},"body":{"index.html":{}}}],["quyen",{"_index":699,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["read",{"_index":1724,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":1649,"title":{},"body":{"index.html":{}}}],["real",{"_index":1702,"title":{},"body":{"index.html":{}}}],["receiver",{"_index":1028,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1075,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1202,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":909,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(@body",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registeruser",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(registeruserdto",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["registeruser",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto",{"_index":173,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["registeruserdto.email",{"_index":1522,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":415,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":386,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":793,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":1630,"title":{},"body":{"index.html":{}}}],["req",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/MulterConfigService.html":{}}}],["req.user",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":1101,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":936,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":938,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1084,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["requestexpress",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["required",{"_index":1455,"title":{},"body":{"classes/User.html":{}}}],["requiring",{"_index":1671,"title":{},"body":{"index.html":{}}}],["res",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":1683,"title":{},"body":{"index.html":{}}}],["response",{"_index":156,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":1191,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('create",{"_index":872,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":878,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":406,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('logout",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('test",{"_index":1000,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":876,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":757,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('user",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1199,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume._id",{"_index":1270,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resume.createdat",{"_index":1271,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resume.dto",{"_index":819,"title":{},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":595,"title":{},"body":{"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:13",{"_index":611,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/UpdateBy.html":{}}}],["resume.dto.ts:17",{"_index":813,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:18",{"_index":610,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:20",{"_index":814,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:23",{"_index":609,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:25",{"_index":817,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:28",{"_index":606,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:33",{"_index":608,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:35",{"_index":1429,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:39",{"_index":602,"title":{},"body":{"classes/CreateResumeCvDto.html":{}}}],["resume.dto.ts:47",{"_index":600,"title":{},"body":{"classes/CreateResumeCvDto.html":{}}}],["resume.dto.ts:55",{"_index":601,"title":{},"body":{"classes/CreateResumeCvDto.html":{}}}],["resume.dto.ts:8",{"_index":607,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:9",{"_index":1418,"title":{},"body":{"classes/UpdateBy.html":{}}}],["resume.name",{"_index":1254,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1218,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1259,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1225,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1252,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1238,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1221,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1223,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":43,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1237,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":324,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role._id",{"_index":1335,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.createdat",{"_index":1336,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.dto",{"_index":1310,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":614,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":615,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:21",{"_index":617,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:33",{"_index":624,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:8",{"_index":618,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":660,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":666,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1300,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1322,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1309,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":657,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1298,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolesmodule",{"_index":44,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":195,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1635,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1656,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":990,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"interfaces/Response.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1190,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":469,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["salary",{"_index":541,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{}}}],["salt",{"_index":1531,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1092,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["scalable",{"_index":1624,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":517,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":521,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":851,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1129,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1222,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1297,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1360,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1456,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":422,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":884,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1154,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1253,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1323,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1386,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1492,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":963,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretorprivatekey",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{}}}],["secure",{"_index":1046,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1283,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1274,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["server",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["set",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["setmetadata(is_public_key",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1632,"title":{},"body":{"index.html":{}}}],["showuserdto",{"_index":1346,"title":{"classes/ShowUserDto.html":{}},"body":{"classes/ShowUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["side",{"_index":1625,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1673,"title":{},"body":{"index.html":{}}}],["single",{"_index":741,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["skills",{"_index":539,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{}}}],["skip(offset",{"_index":458,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["soft",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":460,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/ShowUserDto.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":1720,"title":{},"body":{"index.html":{}}}],["src/.../company.schema.ts",{"_index":1749,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1750,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1751,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1752,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1753,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1754,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1755,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:54",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:61",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:67",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:85",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:144",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:15",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:24",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:75",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:83",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:91",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":904,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":968,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":948,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:21",{"_index":953,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":951,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":970,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:12",{"_index":974,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":972,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:25",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:32",{"_index":380,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:42",{"_index":384,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:47",{"_index":392,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:56",{"_index":388,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":419,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:13",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:18",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:28",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:54",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:61",{"_index":433,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:76",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":562,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1420,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1217,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":493,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:10",{"_index":501,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:13",{"_index":510,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:16",{"_index":507,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:22",{"_index":516,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:28",{"_index":509,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:34",{"_index":513,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:37",{"_index":503,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:40",{"_index":515,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:43",{"_index":512,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:46",{"_index":508,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:7",{"_index":514,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1184,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:19",{"_index":1415,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:22",{"_index":1417,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":646,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":653,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":661,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:21",{"_index":668,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:30",{"_index":669,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1520,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":1568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":570,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1422,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":728,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":730,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:30",{"_index":743,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:51",{"_index":733,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:56",{"_index":734,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:61",{"_index":737,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:66",{"_index":735,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":777,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":783,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":786,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":787,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":789,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":788,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":785,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1058,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:11",{"_index":1068,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:14",{"_index":1065,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:37",{"_index":1062,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":795,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:18",{"_index":799,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":808,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":522,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1424,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":853,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:26",{"_index":857,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:33",{"_index":859,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:43",{"_index":861,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:49",{"_index":866,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:59",{"_index":863,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":882,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":886,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:11",{"_index":888,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:15",{"_index":890,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:29",{"_index":891,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:55",{"_index":892,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:61",{"_index":894,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:77",{"_index":893,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":993,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":830,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:11",{"_index":845,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:14",{"_index":831,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:21",{"_index":844,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:24",{"_index":841,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:27",{"_index":843,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:30",{"_index":840,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:33",{"_index":836,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:36",{"_index":846,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:39",{"_index":837,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:42",{"_index":838,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:45",{"_index":833,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:51",{"_index":848,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:57",{"_index":835,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:63",{"_index":832,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:66",{"_index":847,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:69",{"_index":839,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:72",{"_index":834,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:8",{"_index":842,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":978,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:40",{"_index":983,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module",{"_index":1324,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/mail/mail.module.ts",{"_index":1033,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1057,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1570,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":585,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1426,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1131,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:27",{"_index":1133,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:36",{"_index":1135,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:46",{"_index":1136,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:52",{"_index":1139,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:62",{"_index":1137,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1152,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1155,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:104",{"_index":1161,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":1157,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:17",{"_index":1158,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:43",{"_index":1159,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:69",{"_index":1160,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:75",{"_index":1162,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":656,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1116,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:10",{"_index":1117,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:13",{"_index":1124,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:16",{"_index":1125,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:19",{"_index":1119,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:25",{"_index":1128,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:31",{"_index":1121,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:37",{"_index":1123,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:40",{"_index":1118,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:43",{"_index":1127,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:46",{"_index":1122,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:49",{"_index":1120,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:7",{"_index":1126,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":594,"title":{},"body":{"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":812,"title":{},"body":{"classes/History.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1224,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:26",{"_index":1228,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:31",{"_index":1234,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:37",{"_index":1229,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:46",{"_index":1230,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:51",{"_index":1236,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:61",{"_index":1235,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1251,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1255,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:106",{"_index":1265,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:11",{"_index":1258,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:122",{"_index":1263,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:16",{"_index":1260,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:43",{"_index":1261,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:70",{"_index":1264,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:76",{"_index":1266,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1200,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:10",{"_index":1208,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:13",{"_index":1215,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:16",{"_index":1216,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:21",{"_index":1212,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:24",{"_index":1203,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:27",{"_index":1211,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:30",{"_index":1209,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:40",{"_index":1205,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:46",{"_index":1214,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:52",{"_index":1207,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:58",{"_index":1204,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:61",{"_index":1213,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:64",{"_index":1210,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:67",{"_index":1206,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":613,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1430,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1299,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:25",{"_index":1302,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:31",{"_index":1303,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:41",{"_index":1305,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:47",{"_index":1308,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:57",{"_index":1306,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1321,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1325,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:12",{"_index":1327,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:17",{"_index":1328,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:42",{"_index":1329,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:69",{"_index":1330,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:80",{"_index":1332,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:95",{"_index":1331,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":658,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1284,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:11",{"_index":1289,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:14",{"_index":1290,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:17",{"_index":1294,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:20",{"_index":1286,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:26",{"_index":1296,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:32",{"_index":1288,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:38",{"_index":1292,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:41",{"_index":1285,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:44",{"_index":1295,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:47",{"_index":1291,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:50",{"_index":1287,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:8",{"_index":1293,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":628,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1432,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema",{"_index":992,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1352,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:11",{"_index":1355,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:14",{"_index":1358,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:17",{"_index":1353,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:20",{"_index":1359,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:23",{"_index":1356,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:26",{"_index":1354,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:8",{"_index":1357,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1362,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:25",{"_index":1364,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:34",{"_index":1365,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:44",{"_index":1366,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:50",{"_index":1371,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:59",{"_index":1367,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1384,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1387,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1389,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:17",{"_index":1390,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:42",{"_index":1391,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:69",{"_index":1392,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:79",{"_index":1394,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:97",{"_index":1393,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/show",{"_index":1347,"title":{},"body":{"classes/ShowUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1435,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1437,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1446,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1450,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1449,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1439,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1438,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1447,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1452,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:31",{"_index":1451,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1440,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1442,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:46",{"_index":1454,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:52",{"_index":1444,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:58",{"_index":1441,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:61",{"_index":1453,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:64",{"_index":1448,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:67",{"_index":1443,"title":{},"body":{"classes/User.html":{}}}],["src/users/test.guard.ts",{"_index":1413,"title":{},"body":{"guards/TestGuard.html":{},"coverage.html":{}}}],["src/users/test.guard.ts:6",{"_index":1414,"title":{},"body":{"guards/TestGuard.html":{}}}],["src/users/users.controller.ts",{"_index":1461,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:29",{"_index":1464,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:41",{"_index":1466,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":1465,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":1469,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:63",{"_index":1467,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":828,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1490,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1493,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:108",{"_index":1505,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:116",{"_index":1508,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:120",{"_index":1511,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:135",{"_index":1510,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":1499,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:160",{"_index":1514,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:170",{"_index":1512,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":1509,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:42",{"_index":1513,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:47",{"_index":1501,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:70",{"_index":1502,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:96",{"_index":1503,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1637,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1640,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1642,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":544,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["started",{"_index":1618,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1629,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":605,"title":{},"body":{"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":1185,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["stay",{"_index":1708,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1653,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1097,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["straightforward",{"_index":1669,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":955,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1054,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["su",{"_index":702,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["sub",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1022,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":1006,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":1029,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":1008,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":989,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber._id",{"_index":1398,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.createdat",{"_index":1399,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.dto",{"_index":1374,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":629,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:14",{"_index":632,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:20",{"_index":631,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:28",{"_index":635,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1041,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":991,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":999,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1004,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1385,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1373,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1040,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1361,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":45,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1372,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":1007,"title":{},"body":{"controllers/MailController.html":{}}}],["successfully",{"_index":1077,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sunday",{"_index":1003,"title":{},"body":{"controllers/MailController.html":{}}}],["super",{"_index":923,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":928,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1019,"title":{},"body":{"controllers/MailController.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1736,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1080,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["system",{"_index":1524,"title":{},"body":{"injectables/UsersService.html":{}}}],["t",{"_index":481,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["table",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["tai",{"_index":1408,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["take",{"_index":1654,"title":{},"body":{"index.html":{}}}],["targetdirectory",{"_index":1066,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":937,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":943,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":935,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["team",{"_index":1020,"title":{},"body":{"controllers/MailController.html":{}}}],["temp",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1027,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1051,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":810,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1645,"title":{},"body":{"index.html":{}}}],["test.guard",{"_index":1472,"title":{},"body":{"controllers/UsersController.html":{}}}],["test:covdeployment",{"_index":1648,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1647,"title":{},"body":{"index.html":{}}}],["testguard",{"_index":1411,"title":{"guards/TestGuard.html":{}},"body":{"guards/TestGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["tests",{"_index":1643,"title":{},"body":{"index.html":{}}}],["tham",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["thanks",{"_index":1719,"title":{},"body":{"index.html":{}}}],["thi",{"_index":697,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/SubscribersService.html":{}}}],["this.authservice.login(req.user",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":975,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":405,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":409,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":412,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":416,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":414,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":456,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":453,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findone",{"_index":487,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":491,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":488,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get('init_password",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('should_init",{"_index":683,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":807,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1102,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":770,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":771,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":774,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":773,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(createuserdto.password",{"_index":1536,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.gethashpassword(registeruserdto.password",{"_index":1527,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":806,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel",{"_index":900,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":896,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1010,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":899,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":901,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":903,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":902,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":873,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":874,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":875,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":879,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":877,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":724,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":1017,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel",{"_index":1171,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.count",{"_index":688,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1167,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1170,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":694,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1163,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":692,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1175,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1174,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1145,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":1146,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1147,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1149,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1148,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1198,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":925,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1273,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1268,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1272,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findone",{"_index":1275,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1280,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1278,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createresumedto",{"_index":1241,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1244,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyusers(user",{"_index":1243,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1245,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1248,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1247,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1338,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.count",{"_index":690,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1334,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1337,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1342,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id)).populate",{"_index":1339,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":707,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":695,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1345,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1340,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.findone(userrole._id",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservice.findone(userrole._id)).toobject",{"_index":967,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1313,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1314,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1315,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1317,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1316,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel",{"_index":1401,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.create",{"_index":1397,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1005,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1400,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1395,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1409,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone",{"_index":1402,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1377,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1378,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1379,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1381,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1380,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1541,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.count",{"_index":686,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1528,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1540,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1549,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1521,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":708,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1552,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1546,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1480,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1483,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1481,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(pass",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(registeruser",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1486,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1485,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refreshtoken",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["thong",{"_index":703,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["throttle",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["throttle(5",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thu",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["time",{"_index":1703,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":519,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["todo",{"_index":1030,"title":{},"body":{"controllers/MailController.html":{}}}],["toi",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["token",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["ton",{"_index":1407,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["total",{"_index":479,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":452,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":454,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":1726,"title":{},"body":{"index.html":{}}}],["trang",{"_index":465,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["transformer",{"_index":527,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1192,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1043,"title":{},"body":{"modules/MailModule.html":{}}}],["trong",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{}}}],["trong'})@isarray({message",{"_index":633,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateResumeDto.html":{}}}],["trong'})@isboolean({message",{"_index":616,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trong'})@isemail({message",{"_index":630,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["trong'})@ismongoid({each",{"_index":619,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trong'})@ismongoid({message",{"_index":599,"title":{},"body":{"classes/CreateResumeCvDto.html":{},"classes/RegisterUserDto.html":{}}}],["true",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["trying",{"_index":1094,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ttl",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["tuyenbest1234@gmail.com",{"_index":1018,"title":{},"body":{"controllers/MailController.html":{}}}],["twitter",{"_index":1732,"title":{},"body":{"index.html":{}}}],["type",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1747,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":820,"title":{},"body":{"classes/History.html":{},"classes/ShowUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":821,"title":{},"body":{"classes/History.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{}}}],["typescript",{"_index":1628,"title":{},"body":{"index.html":{}}}],["tại",{"_index":467,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tổng",{"_index":475,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":919,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('username",{"_index":976,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":1201,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["ung",{"_index":701,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["unit",{"_index":1644,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":1746,"title":{},"body":{"properties.html":{}}}],["update",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1484,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":772,"title":{},"body":{"controllers/FilesController.html":{}}}],["update(id",{"_index":389,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updatesubscriberdto",{"_index":1368,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1468,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateat",{"_index":1220,"title":{},"body":{"classes/Resume.html":{}}}],["updateby",{"_index":815,"title":{"classes/UpdateBy.html":{}},"body":{"classes/History.html":{},"classes/Resume.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updatecompanydto",{"_index":390,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updated",{"_index":1277,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updatedat",{"_index":499,"title":{},"body":{"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":489,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":736,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":864,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1138,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updatepermissiondto.apipath",{"_index":1172,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["updatepermissiondto.method",{"_index":1173,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["updateresumedto",{"_index":822,"title":{"classes/UpdateResumeDto.html":{}},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1307,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":792,"title":{},"body":{"injectables/FilesService.html":{},"index.html":{}}}],["updatesubscriberdto",{"_index":1369,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updatesubscriberdto.email",{"_index":1403,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["updateuserdto",{"_index":1434,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1547,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusertoken",{"_index":1496,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":746,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":732,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":738,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1404,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":598,"title":{},"body":{"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/Resume.html":{}}}],["use",{"_index":1525,"title":{},"body":{"injectables/UsersService.html":{}}}],["useclass",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{}}}],["usefactory",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(testguard",{"_index":1482,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(throttlerguard",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":745,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":758,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":140,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@post('/register",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@responsemessage('get",{"_index":1233,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user._id",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.createdat",{"_index":1530,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ShowUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":547,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/ShowUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:102",{"_index":1176,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:107",{"_index":1183,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:113",{"_index":1178,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:119",{"_index":1459,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:126",{"_index":1458,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:17",{"_index":548,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:20",{"_index":549,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:25",{"_index":642,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":640,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":643,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":637,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:51",{"_index":641,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:56",{"_index":636,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:61",{"_index":644,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:67",{"_index":638,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:71",{"_index":1181,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:8",{"_index":1436,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:82",{"_index":1179,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:87",{"_index":1182,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:92",{"_index":1177,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:97",{"_index":1180,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.email",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.id",{"_index":1539,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.name",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["user.role",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.[data",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?._id",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.createdat",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["user@gmail.com",{"_index":722,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercreated",{"_index":1500,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercreated._id",{"_index":1537,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercreated.email",{"_index":1538,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdocument",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":604,"title":{},"body":{"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":190,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@responsemessage('user",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["userrole",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole._id",{"_index":1529,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":723,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["users",{"_index":1462,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1491,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1473,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1471,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1460,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":667,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":46,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":275,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1544,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["validate",{"_index":949,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":952,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":973,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":532,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{}}}],["validatenested()@isnotempty()@type(undefined",{"_index":816,"title":{},"body":{"classes/History.html":{}}}],["validateuser",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":533,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeCvDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/ShowUserDto.html":{},"classes/UpdateBy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["vao",{"_index":966,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["variable",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1756,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ve",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1743,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1696,"title":{},"body":{"index.html":{}}}],["vien",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["vietnam",{"_index":715,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["visit",{"_index":1687,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1699,"title":{},"body":{"index.html":{}}}],["void",{"_index":1067,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["với",{"_index":476,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["watch",{"_index":1638,"title":{},"body":{"index.html":{}}}],["website",{"_index":1730,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1023,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1111,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["working",{"_index":1686,"title":{},"body":{"index.html":{}}}],["world",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1711,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1723,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1093,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { Throttle, ThrottlerModule } from '@nestjs/throttler';\nimport { HealthModule } from './health/health.module';\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot({\n      ttl: 60, // trong 60s chay toi da 10 lan\n      limit: 10,\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // {\n    //   provide: APP_GUARD,\n    //   useClass: JwtAuthGuard,\n    // },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable() // decorator\nexport class AppService {\n  getHello(): string {\n    return 'Hello World! Mimi Cute';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getAccount\n                            \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                getProfile1\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/account')@ResponseMessage('Get user information')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getProfile1\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile1(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile1')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Throttle(5, 60)@ApiBody({type: UserLoginDto})@ResponseMessage('User Login')@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLogout(user: IUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/logout')@ResponseMessage('Logout user')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleRefreshToken(request: RequestExpress, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/refresh')@ResponseMessage('Get user by refresh Token')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestExpress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Register a new user')@Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Render,\n  Req,\n  Request,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { AuthService } from './auth.service';\nimport {\n  CreateUserDto,\n  RegisterUserDto,\n  UserLoginDto,\n} from 'src/users/dto/create-user.dto';\nimport { Request as RequestExpress, Response, response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { Throttle, ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private roleService: RolesService,\n  ) {}\n\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  @Throttle(5, 60)\n  @ApiBody({ type: UserLoginDto })\n  @ResponseMessage('User Login')\n  @Post('/login')\n  handleLogin(@Req() req, @Res({ passthrough: true }) response: Response) {\n    return this.authService.login(req.user, response);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Public()\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n  // @UseGuards(JwtAuthGuard)\n  // @Public()\n  @Get('profile1')\n  getProfile1(@Request() req) {\n    return req.user;\n  }\n\n  @Public()\n  @ResponseMessage('Register a new user')\n  @Post('/register')\n  register(@Body() registerUserDto: RegisterUserDto) {\n    return this.authService.register(registerUserDto);\n  }\n\n  @Get('/account')\n  @ResponseMessage('Get user information')\n  async getAccount(@User() user: IUser) {\n    const temp = (await this.roleService.findOne(user.role._id)) as any;\n    user.permissions = temp.permissions;\n    return { user };\n  }\n\n  @Public()\n  @Get('/refresh')\n  @ResponseMessage('Get user by refresh Token')\n  handleRefreshToken(\n    @Req() request: RequestExpress,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = request.cookies['refresh_token'];\n    return this.authService.processNewToken(refreshToken, response);\n  }\n  @Get('/logout')\n  @ResponseMessage('Logout user')\n  handleLogout(\n    @User() user: IUser,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    return this.authService.logout(response, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { RolesModule } from 'src/roles/roles.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    RolesModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secretOrPrivateKey: configService.get(\n          'JWT_ACCESS_TOKEN_SECRET',\n        ),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, roleService: RolesService, userModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser, response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerUser: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUser\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:91\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms';\nimport { response, Response } from 'express';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private roleService: RolesService,\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n  ) {}\n  // username / pass la 2 tham so thu vien passport no nem ve\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOneByUserName(username);\n    if (user) {\n      const isValid = this.usersService.isValidPassword(pass, user.password);\n      if (isValid === true) {\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.roleService.findOne(userRole._id);\n        const objUser = {\n          ...user.toObject(),\n          permissions: temp?.permissions ?? [],\n        };\n        return objUser;\n      }\n    } else if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n  async login(user: IUser, response: Response) {\n    const { _id, name, email, role, permissions } = user;\n    const payload = {\n      sub: 'token login',\n      iss: 'form server',\n      _id,\n      name,\n      email,\n      role,\n    };\n    const refreshToken = this.createRefreshToken(payload);\n    // update user with refresh token\n    await this.usersService.updateUserToken(refreshToken, _id);\n\n    // set refresh_token as cookies\n    response.cookie('refresh_token', refreshToken, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000,\n    });\n    return {\n      access_token: this.jwtService.sign(payload),\n      refreshToken,\n      user: {\n        _id,\n        name,\n        email,\n        role,\n        permissions: permissions,\n      },\n    };\n  }\n\n  async register(registerUser: RegisterUserDto) {\n    let user = await this.usersService.register(registerUser);\n    return {\n      _id: user?._id,\n      createdAt: user?.createdAt,\n    };\n  }\n\n  createRefreshToken = (payload) => {\n    const refreshToken = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn:\n        ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000,\n    });\n    return refreshToken;\n  };\n  processNewToken = async (refreshToken: string, response: Response) => {\n    try {\n      this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n      let user = await this.usersService.findUserByToken(refreshToken);\n\n      if (user) {\n        // update refresh_token\n        const { _id, name, email, role } = user;\n        const payload = {\n          sub: 'token refresh',\n          iss: 'form server',\n          _id,\n          name,\n          email,\n          role,\n        };\n        const refreshToken = this.createRefreshToken(payload);\n        // update user with refresh token\n        await this.usersService.updateUserToken(refreshToken, _id.toString());\n\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.roleService.findOne(userRole._id);\n\n        // set refresh_token as cookies\n        response.clearCookie('refresh_token');\n        response.cookie('refresh_token', refreshToken, {\n          httpOnly: true,\n          maxAge:\n            ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000,\n        });\n        return {\n          access_token: this.jwtService.sign(payload),\n          refreshToken,\n          user: {\n            _id,\n            name,\n            email,\n            role,\n            permissions: temp?.permissions ?? [],\n          },\n        };\n      } else {\n        throw new BadRequestException(\n          'Refresh token invalid , Pls Login again',\n        );\n      }\n      console.log(user);\n    } catch (error) {\n      throw new BadRequestException('Refresh token invalid , Pls Login again');\n    }\n  };\n  logout = async (response: Response, user: IUser) => {\n    await this.usersService.updateUserToken('', user._id);\n    response.clearCookie('refresh_token');\n    return 'ok';\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch List Company with paginate')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCompanyDto\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Req,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Fetch List Company with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.companiesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCompanyDto\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Req } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport mongoose from 'mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport { Request } from 'express';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n  create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    return this.companyModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not found company ${id}`);\n    }\n    return this.companyModel.findOne({ _id: id });\n  }\n\n  update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    return this.companyModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Company not found';\n    }\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.companyModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nexport type CompanyDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop()\n  name: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  logo: string;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\nexport class CreateJobDto {\n  @IsNotEmpty({\n    message: 'name Khong duoc de trong',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'skills Khong duoc de trong',\n  })\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsNotEmpty({\n    message: 'location Khong duoc de trong',\n  })\n  location: string;\n\n  @IsNotEmpty({\n    message: 'salary Khong duoc de trong',\n  })\n  salary: number;\n\n  @IsNotEmpty({\n    message: 'quantity Khong duoc de trong',\n  })\n  quantity: number;\n\n  @IsNotEmpty({\n    message: 'level Khong duoc de trong',\n  })\n  level: string;\n\n  @IsNotEmpty({\n    message: 'description Khong duoc de trong',\n  })\n  description: string;\n\n  @IsNotEmpty({\n    message: 'description Khong duoc de trong',\n  })\n  startDate: Date;\n\n  @IsNotEmpty({\n    message: 'description Khong duoc de trong',\n  })\n  endDate: Date;\n\n  @IsNotEmpty({\n    message: 'isActive Khong duoc de trong',\n  })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsDefined,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name Khong duoc de trong' })\n  name: string;\n\n  @IsEmail(\n    {},\n    {\n      message: 'Email Khong Dung Dinh Dang',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password Khong duoc de trong',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: 'Age Khong duoc de trong',\n  })\n  age: number;\n\n  @IsNotEmpty({\n    message: 'Gender Khong duoc de trong',\n  })\n  gender: number;\n\n  @IsNotEmpty({\n    message: 'Address Khong duoc de trong',\n  })\n  address: number;\n\n  @IsNotEmpty({\n    message: 'role Khong duoc de trong',\n  })\n  role: string;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name Khong duoc de trong' })\n  name: string;\n\n  @IsEmail(\n    {},\n    {\n      message: 'Email Khong Dung Dinh Dang',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password Khong duoc de trong',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: 'Age Khong duoc de trong',\n  })\n  age: number;\n\n  @IsNotEmpty({\n    message: 'Gender Khong duoc de trong',\n  })\n  gender: string;\n\n  @IsNotEmpty({\n    message: 'Address Khong duoc de trong',\n  })\n  address: string;\n  @IsNotEmpty({\n    message: 'role Khong duoc de trong',\n  })\n  @IsMongoId({ message: 'role must mongo id type' })\n  role: string;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'mimicute', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'address Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'logo Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({\n    message: 'name Khong duoc de trong',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'address Khong duoc de trong',\n  })\n  address: string;\n\n  @IsNotEmpty({\n    message: 'description Khong duoc de trong',\n  })\n  description: string;\n\n  @IsNotEmpty({\n    message: 'logo Khong duoc de trong',\n  })\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'level Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'location Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'quantity Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'salary Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'skills Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\nexport class CreateJobDto {\n  @IsNotEmpty({\n    message: 'name Khong duoc de trong',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'skills Khong duoc de trong',\n  })\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsNotEmpty({\n    message: 'location Khong duoc de trong',\n  })\n  location: string;\n\n  @IsNotEmpty({\n    message: 'salary Khong duoc de trong',\n  })\n  salary: number;\n\n  @IsNotEmpty({\n    message: 'quantity Khong duoc de trong',\n  })\n  quantity: number;\n\n  @IsNotEmpty({\n    message: 'level Khong duoc de trong',\n  })\n  level: string;\n\n  @IsNotEmpty({\n    message: 'description Khong duoc de trong',\n  })\n  description: string;\n\n  @IsNotEmpty({\n    message: 'description Khong duoc de trong',\n  })\n  startDate: Date;\n\n  @IsNotEmpty({\n    message: 'description Khong duoc de trong',\n  })\n  endDate: Date;\n\n  @IsNotEmpty({\n    message: 'isActive Khong duoc de trong',\n  })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'method Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'module Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePermissionDto {\n  @IsNotEmpty({\n    message: 'name Khong duoc de trong',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'apiPath Khong duoc de trong',\n  })\n  apiPath: string;\n\n  @IsNotEmpty({\n    message: 'method Khong duoc de trong',\n  })\n  method: string;\n\n  @IsNotEmpty({\n    message: 'module Khong duoc de trong',\n  })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeCvDto.html":{"url":"classes/CreateResumeCvDto.html","title":"class - CreateResumeCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId Khong duoc de trong'})@IsMongoId({message: 'companyId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId Khong duoc de trong'})@IsMongoId({message: 'jobId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n  @IsNotEmpty({\n    message: 'email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'userId Khong duoc de trong',\n  })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({\n    message: 'url Khong duoc de trong',\n  })\n  url: string;\n\n  @IsNotEmpty({\n    message: 'status Khong duoc de trong',\n  })\n  status: string;\n\n  @IsNotEmpty({\n    message: 'companyId Khong duoc de trong',\n  })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({\n    message: 'jobId Khong duoc de trong',\n  })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\nexport class CreateResumeCvDto {\n  @IsNotEmpty({\n    message: 'url Khong duoc de trong',\n  })\n  url: string;\n\n  @IsNotEmpty({\n    message: 'companyId Khong duoc de trong',\n  })\n  @IsMongoId({\n    message: 'companyId is a mongo id',\n  })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({\n    message: 'jobId Khong duoc de trong',\n  })\n  @IsMongoId({\n    message: 'jobId is a mongo id',\n  })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n  @IsNotEmpty({\n    message: 'email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'userId Khong duoc de trong',\n  })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({\n    message: 'url Khong duoc de trong',\n  })\n  url: string;\n\n  @IsNotEmpty({\n    message: 'status Khong duoc de trong',\n  })\n  status: string;\n\n  @IsNotEmpty({\n    message: 'companyId Khong duoc de trong',\n  })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({\n    message: 'jobId Khong duoc de trong',\n  })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\nexport class CreateResumeCvDto {\n  @IsNotEmpty({\n    message: 'url Khong duoc de trong',\n  })\n  url: string;\n\n  @IsNotEmpty({\n    message: 'companyId Khong duoc de trong',\n  })\n  @IsMongoId({\n    message: 'companyId is a mongo id',\n  })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({\n    message: 'jobId Khong duoc de trong',\n  })\n  @IsMongoId({\n    message: 'jobId is a mongo id',\n  })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive Khong duoc de trong'})@IsBoolean({message: 'isActive must have value Boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions Khong duoc de trong'})@IsMongoId({each: true, message: 'each permission is mongo object id'})@IsArray({message: 'permission type must is array '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @IsNotEmpty({\n    message: 'name Khong duoc de trong',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'description Khong duoc de trong',\n  })\n  description: string;\n\n  @IsNotEmpty({\n    message: 'isActive Khong duoc de trong',\n  })\n  @IsBoolean({\n    message: 'isActive must have value Boolean',\n  })\n  isActive: boolean;\n\n  @IsNotEmpty({\n    message: 'permissions Khong duoc de trong',\n  })\n  @IsMongoId({\n    each: true,\n    message: 'each permission is mongo object id',\n  })\n  @IsArray({\n    message: 'permission type must is array ',\n  })\n  permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description Khong duoc de trong'})@IsEmail({message: 'Email khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'skills Khong duoc de trong'})@IsArray({message: 'skills phai la dinh dang array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateSubscriberDto {\n  @IsNotEmpty({\n    message: 'name Khong duoc de trong',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'description Khong duoc de trong',\n  })\n  @IsEmail({ message: 'Email khong duoc de trong' })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'skills Khong duoc de trong',\n  })\n  @IsArray({\n    message: 'skills phai la dinh dang array',\n  })\n  skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email Khong Dung Dinh Dang'})@IsNotEmpty({message: 'Email Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'role Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsDefined,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name Khong duoc de trong' })\n  name: string;\n\n  @IsEmail(\n    {},\n    {\n      message: 'Email Khong Dung Dinh Dang',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password Khong duoc de trong',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: 'Age Khong duoc de trong',\n  })\n  age: number;\n\n  @IsNotEmpty({\n    message: 'Gender Khong duoc de trong',\n  })\n  gender: number;\n\n  @IsNotEmpty({\n    message: 'Address Khong duoc de trong',\n  })\n  address: number;\n\n  @IsNotEmpty({\n    message: 'role Khong duoc de trong',\n  })\n  role: string;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name Khong duoc de trong' })\n  name: string;\n\n  @IsEmail(\n    {},\n    {\n      message: 'Email Khong Dung Dinh Dang',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password Khong duoc de trong',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: 'Age Khong duoc de trong',\n  })\n  age: number;\n\n  @IsNotEmpty({\n    message: 'Gender Khong duoc de trong',\n  })\n  gender: string;\n\n  @IsNotEmpty({\n    message: 'Address Khong duoc de trong',\n  })\n  address: string;\n  @IsNotEmpty({\n    message: 'role Khong duoc de trong',\n  })\n  @IsMongoId({ message: 'role must mongo id type' })\n  role: string;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'mimicute', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {} from 'src/decorator/customize';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport {\n  Permission,\n  PermissionSchema,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/databases/databases.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  OnModuleDestroy,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { ConfigFactory, ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  private readonly logger = new Logger(DatabasesService.name);\n  constructor(\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n  async onModuleInit() {\n    const isInit = this.configService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      const countUser = await this.userModel.count({});\n      const countPermission = await this.permissionModel.count({});\n      const countRole = await this.roleModel.count({});\n\n      // create permissions\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSIONS);\n        // bulk create\n      }\n      // create role\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select('_id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin thi full quyen ',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'Nguoi dung / Ung vien su dung he thong',\n            isActive: true,\n            permissions: [], // Khong set quyen chi can add role\n          },\n        ]);\n      }\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n        await this.userModel.insertMany([\n          {\n            name: \"I'm admin\",\n            email: 'admin@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm Hỏi Dân IT\",\n            email: 'hoidanit@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 96,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm normal user\",\n            email: 'user@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: userRole?._id,\n          },\n        ]);\n      }\n\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFileDto\n                                    \n                                                UpdateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload Single File')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { fileName: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('files')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Public()\n  @Post('upload')\n  @ResponseMessage('Upload Single File')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType: /(jpg|jpeg|png|gif|txt|doc|docx|pdf)$/,\n        })\n        .addMaxSizeValidator({\n          maxSize: 1024 * 1024, // 1 MB\n        })\n        .build({\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n        }),\n    )\n    file: Express.Multer.File,\n  ) {\n    return {\n      fileName: file.filename,\n    };\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  imports: [\n    MulterModule.registerAsync({\n      imports: [ConfigModule],\n      useClass: MulterConfigService,\n    }),\n  ],\n  controllers: [FilesController],\n  providers: [FilesService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFileDto\n                                    \n                                                CreateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFileDto\n                                    \n                                                UpdateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  MongooseHealthIndicator,\n} from '@nestjs/terminus';\nimport { Public } from 'src/decorator/customize';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: MongooseHealthIndicator,\n  ) {}\n  @Get()\n  @Public()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Type } from 'class-transformer';\n\nclass UpdateBy {\n  @IsNotEmpty()\n  _id: Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\nclass History {\n  @IsNotEmpty()\n  status: string;\n\n  @IsNotEmpty()\n  updatedAt: Date;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(() => UpdateBy)\n  updatedBy: UpdateBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'history khong duoc de trong' })\n  @IsArray({\n    message: 'history co dinh dang la Array',\n  })\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  permissions?: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    module: string;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Job {\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n\n  @Prop()\n  salary: string;\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  startDate: Date;\n\n  @Prop()\n  endDate: Date;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch jobs by pagination')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a job by id')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a new job')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a new job')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\n\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @ResponseMessage('Create a new job')\n  create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Fetch jobs by pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.jobsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a job by id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a new job')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser,\n  ) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a new job')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport { Job, JobDocument } from './schemas/job.schema';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name) private jobModel: SoftDeleteModel,\n  ) {}\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    let job = await this.jobModel.create({\n      ...createJobDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: job._id,\n      createdAt: job.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.jobModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  findOne(id: string) {\n    return this.jobModel.findOne({\n      _id: id,\n    });\n  }\n\n  update(id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    return this.jobModel.updateOne(\n      {\n        _id: id,\n      },\n\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.jobModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user._id,\n        },\n      },\n    );\n    return this.jobModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    const request: Request = context.switchToHttp().getRequest();\n    if (err || !user) {\n      throw (\n        err ||\n        new UnauthorizedException(\n          'Token is Invalid or Not have token on Bearer Token Header Request !',\n        )\n      );\n    }\n    // check permissions\n    const targetMethod = request.method;\n    const targetEndpoint = request.route?.path as string;\n\n    const permissions = user.permissions ?? [];\n    let isExist = permissions.find(\n      (permission) =>\n        targetMethod === permission.method &&\n        targetEndpoint === permission.apiPath,\n    );\n    if (targetEndpoint.startsWith('/api/v1/auth')) isExist = true;\n    if (!isExist) {\n      throw new ForbiddenException('You not permit access this endpoint');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private roleService: RolesService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: IUser) {\n    const { _id, name, email, role } = payload;\n    // gan them permission vao req.user\n    const userRole = role as unknown as { _id: string; name: string };\n    const temp = (await this.roleService.findOne(userRole._id)).toObject();\n    //req.user\n    return {\n      _id,\n      name,\n      email,\n      role,\n      permissions: temp?.permissions ?? [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException('Username / Password Invalid');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email')@Cron('0 10 0 * * 0 ')\n                \n            \n\n            \n                \n                    Defined in src/mail/mail.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { SubscriberDocument } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private mailerService: MailerService,\n\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n\n  @Get()\n  @Public()\n  @ResponseMessage('Test email')\n  @Cron('0 10 0 * * 0 ') // 0.10' am every sunday\n  async handleTestEmail() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobWithMatchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n      if (jobWithMatchingSkills?.length) {\n        const jobs = jobWithMatchingSkills.map((item) => {\n          return {\n            name: item.name,\n            company: item.company.name,\n            salary:\n              `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' đ',\n            skills: item.skills,\n          };\n        });\n        await this.mailerService.sendMail({\n          to: 'tuyenbest1234@gmail.com',\n          from: '\"Support Team\" ', // override default from\n          subject: 'Welcome to Nice App! Confirm your Email',\n          template: 'new-job',\n          context: {\n            receiver: subs.name,\n            jobs: jobs,\n          },\n        });\n      }\n      //todo\n      //build template\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema },\n    ]),\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview:\n          configService.get('EMAIL_PREVIEW') === 'true' ? true : false,\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [MailController],\n  providers: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer.config.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer.config.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetDirectory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport fs from 'fs';\nimport { diskStorage } from 'multer';\nimport path, { join } from 'path';\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  getRootPath = () => {\n    return process.cwd();\n  };\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? 'default';\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, join(this.getRootPath(), `public/images/${folder}`));\n        },\n        filename: (req, file, cb) => {\n          //get image extension\n          let extName = path.extname(file.originalname);\n          //get image's name (without extension)\n          let baseName = path.basename(file.originalname, extName);\n          let finalName = `${baseName}-${Date.now()}${extName}`;\n          cb(null, finalName);\n        },\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nexport type PermissionDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  logo: string;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPermissionDto\n                                    \n                                                CreatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch permissions with paginate')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a permission by id')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a permission')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePermissionDto\n                                    \n                                                UpdatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  Res,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { ResponseMessage, User } from 'src/decorator/customize';\n\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  @ResponseMessage('Create a new permission')\n  create(\n    @Body() createPermissionDto: CreatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch permissions with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.permissionsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a permission by id')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a permission')\n  update(\n    @Param('id') id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a permission')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Permission.name, schema: PermissionSchema },\n    ]),\n  ],\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPermissionDto\n                                    \n                                                CreatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePermissionDto\n                                    \n                                                UpdatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const isExist = await this.permissionModel.findOne({\n      apiPath: createPermissionDto.apiPath,\n      method: createPermissionDto.method,\n    });\n\n    if (isExist) {\n      throw new BadRequestException(\n        `The api path ${createPermissionDto.apiPath} with method ${createPermissionDto.method} already exists. Please try again.`,\n      );\n    }\n\n    const permission = await this.permissionModel.create({\n      ...createPermissionDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n\n    return {\n      _id: permission._id,\n      createdAt: permission.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.permissionModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  findOne(id: string) {\n    return this.permissionModel.findOne({\n      _id: id,\n    });\n  }\n\n  async update(\n    id: string,\n    updatePermissionDto: UpdatePermissionDto,\n    user: IUser,\n  ) {\n    const isExist = await this.permissionModel.findOne({\n      apiPath: updatePermissionDto.apiPath,\n      method: updatePermissionDto.method,\n    });\n\n    if (isExist) {\n      throw new BadRequestException(\n        `The api path ${updatePermissionDto.apiPath} with method ${updatePermissionDto.method} already exists. Please try again.`,\n      );\n    }\n    return this.permissionModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        ...updatePermissionDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Company not found';\n    }\n    await this.permissionModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.permissionModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email Khong Dung Dinh Dang'})@IsNotEmpty({message: 'Email Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password Khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'role Khong duoc de trong'})@IsMongoId({message: 'role must mongo id type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:107\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsDefined,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name Khong duoc de trong' })\n  name: string;\n\n  @IsEmail(\n    {},\n    {\n      message: 'Email Khong Dung Dinh Dang',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password Khong duoc de trong',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: 'Age Khong duoc de trong',\n  })\n  age: number;\n\n  @IsNotEmpty({\n    message: 'Gender Khong duoc de trong',\n  })\n  gender: number;\n\n  @IsNotEmpty({\n    message: 'Address Khong duoc de trong',\n  })\n  address: number;\n\n  @IsNotEmpty({\n    message: 'role Khong duoc de trong',\n  })\n  role: string;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name Khong duoc de trong' })\n  name: string;\n\n  @IsEmail(\n    {},\n    {\n      message: 'Email Khong Dung Dinh Dang',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password Khong duoc de trong',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: 'Age Khong duoc de trong',\n  })\n  age: number;\n\n  @IsNotEmpty({\n    message: 'Gender Khong duoc de trong',\n  })\n  gender: string;\n\n  @IsNotEmpty({\n    message: 'Address Khong duoc de trong',\n  })\n  address: string;\n  @IsNotEmpty({\n    message: 'role Khong duoc de trong',\n  })\n  @IsMongoId({ message: 'role must mongo id type' })\n  role: string;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'mimicute', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: any;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Resume {\n  @Prop()\n  email: string;\n\n  @Prop()\n  url: string;\n\n  @Prop({ type: Object })\n  userId: {\n    _id: mongoose.Schema.Types.ObjectId;\n  };\n\n  @Prop()\n  status: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string;\n    updateAt: Date;\n    updateBy: {\n      _id: mongoose.Schema.Types.ObjectId;\n      email: string;\n    };\n  }[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getResumesByUser\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createResumeDto: CreateResumeCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a resume')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createResumeDto\n                                    \n                                                CreateResumeCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all resumes with paginate')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getResumesByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResumesByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get resumes by user')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeCvDto, CreateResumeDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  @ResponseMessage('Create a resume')\n  create(@Body() createResumeDto: CreateResumeCvDto, @User() user: IUser) {\n    return this.resumesService.create(createResumeDto, user);\n  }\n  @Post('by-user')\n  @ResponseMessage('Get resumes by user')\n  getResumesByUser(@User() user: IUser) {\n    return this.resumesService.findByUsers(user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch all resumes with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body('status') status: string,\n    @User()\n    user: IUser,\n  ) {\n    return this.resumesService.update(id, status, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }]),\n  ],\n  controllers: [ResumesController],\n  providers: [ResumesService],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsers\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createResumeDto: CreateResumeCvDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createResumeDto\n                                    \n                                                CreateResumeCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsers(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, status: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateResumeCvDto, CreateResumeDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel,\n  ) {}\n  async create(createResumeDto: CreateResumeCvDto, user: IUser) {\n    let resume = await this.resumeModel.create({\n      ...createResumeDto,\n      email: user.email,\n      userId: user._id,\n      status: 'PENDING',\n      history: [\n        {\n          status: 'PENDING',\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        },\n      ],\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: resume._id,\n      createdAt: resume.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.resumeModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  findOne(id: string) {\n    return this.resumeModel.findOne({\n      _id: id,\n    });\n  }\n\n  update(id: string, status: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('not found resume');\n    }\n\n    const updated = this.resumeModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        status: status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n        $push: {\n          history: {\n            status: status,\n            updatedAt: new Date(),\n            updatedBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n        },\n      },\n    );\n    return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.resumeModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user._id,\n        },\n      },\n    );\n    return this.resumeModel.softDelete({\n      _id: id,\n    });\n  }\n  async findByUsers(user: IUser) {\n    return await this.resumeModel\n      .find({\n        userId: user._id,\n      })\n      .sort('-createdAt')\n      .populate([\n        { path: 'companyId', select: { name: 1 } },\n        {\n          path: 'jobId',\n          select: { name: 1 },\n        },\n      ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\nexport type RoleDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: Permission[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  logo: string;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch roles by pagination')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get a role by id')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a role by id')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a role by id')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoleDto\n                                    \n                                                UpdateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  @ResponseMessage('Create a new role')\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch roles by pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.rolesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get a role by id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a role by id')\n  update(\n    @Param('id') id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @User() user: IUser,\n  ) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a role by id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_RolesModule_exports\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport {\n  Permission,\n  PermissionSchema,\n} from 'src/permissions/schemas/permission.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\nimport { MailModule } from 'src/mail/mail.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }]),\n  ],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoleDto\n                                    \n                                                UpdateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const isExist = await this.roleModel.findOne({\n      name: createRoleDto.name,\n    });\n\n    if (isExist) {\n      throw new BadRequestException(\n        `The role name : ${createRoleDto.name} already exists. Please try again.`,\n      );\n    }\n\n    const role = await this.roleModel.create({\n      ...createRoleDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n\n    return {\n      _id: role._id,\n      createdAt: role.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.roleModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('not found role');\n    }\n\n    return (await this.roleModel.findById(id)).populate({\n      path: 'permissions',\n      select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 },\n    });\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    return this.roleModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        ...updateRoleDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    const foundRole = await this.roleModel.findById(id);\n    if (foundRole.name === 'ADMIN') {\n      throw new BadRequestException('Cannot delete role name ADMIN');\n    }\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Role not found';\n    }\n    await this.roleModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.roleModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShowUserDto.html":{"url":"classes/ShowUserDto.html","title":"class - ShowUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShowUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/show-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsNotEmpty, IsEmail } from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\nimport { OmitType } from '@nestjs/mapped-types';\nexport class ShowUserDto extends OmitType(CreateUserDto, [\n  'password',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type SubscriberDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Subscriber {\n  @Prop()\n  name: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new subscriber')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSubscriberDto\n                                    \n                                                CreateSubscriberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch subscribers by pagination')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get a subscriber by id')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a subscriber by id')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a subscriber by id')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateSubscriberDto\n                                    \n                                                UpdateSubscriberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @Post()\n  @ResponseMessage('Create a new subscriber')\n  create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch subscribers by pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.subscribersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get a subscriber by id')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  @ResponseMessage('Update a subscriber by id')\n  update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a subscriber by id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from './schemas/subscriber.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n    ]),\n  ],\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSubscriberDto\n                                    \n                                                CreateSubscriberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateSubscriberDto\n                                    \n                                                UpdateSubscriberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n  ) {}\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    const isExist = await this.subscriberModel.findOne({\n      email: createSubscriberDto.email,\n    });\n\n    if (isExist) {\n      throw new BadRequestException(\n        `The Subscriber name : ${createSubscriberDto.email} already exists. Please try again.`,\n      );\n    }\n\n    const Subscriber = await this.subscriberModel.create({\n      ...createSubscriberDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n\n    return {\n      _id: Subscriber._id,\n      createdAt: Subscriber.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.subscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.subscriberModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('not found role');\n    }\n\n    return await this.subscriberModel.findOne({\n      _id: id,\n    });\n  }\n\n  update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    return this.subscriberModel.updateOne(\n      {\n        email: updateSubscriberDto.email,\n      },\n      {\n        ...updateSubscriberDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n      {\n        upsert: true, // neu ban ghi da ton tai thi update\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Role not found';\n    }\n    await this.subscriberModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.subscriberModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TestGuard.html":{"url":"guards/TestGuard.html","title":"guard - TestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    TestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/users/test.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/users/test.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TestGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/transform.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: any;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBy.html":{"url":"classes/UpdateBy.html","title":"class - UpdateBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Type } from 'class-transformer';\n\nclass UpdateBy {\n  @IsNotEmpty()\n  _id: Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\nclass History {\n  @IsNotEmpty()\n  status: string;\n\n  @IsNotEmpty()\n  updatedAt: Date;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(() => UpdateBy)\n  updatedBy: UpdateBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'history khong duoc de trong' })\n  @IsArray({\n    message: 'history co dinh dang la Array',\n  })\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCompanyDto } from './create-company.dto';\nimport { OmitType } from '@nestjs/mapped-types';\nimport { IsString } from 'class-validator';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                history\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         History[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'history khong duoc de trong'})@IsArray({message: 'history co dinh dang la Array'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Type } from 'class-transformer';\n\nclass UpdateBy {\n  @IsNotEmpty()\n  _id: Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\nclass History {\n  @IsNotEmpty()\n  status: string;\n\n  @IsNotEmpty()\n  updatedAt: Date;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(() => UpdateBy)\n  updatedBy: UpdateBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'history khong duoc de trong' })\n  @IsArray({\n    message: 'history co dinh dang la Array',\n  })\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsNotEmpty, IsEmail } from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\nimport { OmitType } from '@nestjs/mapped-types';\nexport class UpdateUserDto extends OmitType(CreateUserDto, [\n  'password',\n] as const) {\n  @IsString()\n  _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Job } from 'src/jobs/schemas/job.schema';\nimport { Role } from 'src/roles/schemas/role.schema';\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  gender: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'mimicute', description: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:119\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsDefined,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name Khong duoc de trong' })\n  name: string;\n\n  @IsEmail(\n    {},\n    {\n      message: 'Email Khong Dung Dinh Dang',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password Khong duoc de trong',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: 'Age Khong duoc de trong',\n  })\n  age: number;\n\n  @IsNotEmpty({\n    message: 'Gender Khong duoc de trong',\n  })\n  gender: number;\n\n  @IsNotEmpty({\n    message: 'Address Khong duoc de trong',\n  })\n  address: number;\n\n  @IsNotEmpty({\n    message: 'role Khong duoc de trong',\n  })\n  role: string;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name Khong duoc de trong' })\n  name: string;\n\n  @IsEmail(\n    {},\n    {\n      message: 'Email Khong Dung Dinh Dang',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email Khong duoc de trong',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password Khong duoc de trong',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: 'Age Khong duoc de trong',\n  })\n  age: number;\n\n  @IsNotEmpty({\n    message: 'Gender Khong duoc de trong',\n  })\n  gender: string;\n\n  @IsNotEmpty({\n    message: 'Address Khong duoc de trong',\n  })\n  address: string;\n  @IsNotEmpty({\n    message: 'role Khong duoc de trong',\n  })\n  @IsMongoId({ message: 'role must mongo id type' })\n  role: string;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'mimicute', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a user')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch List User with paginate')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get a user')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a user')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a user')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Put,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { TestGuard } from './test.guard';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { ShowUserDto } from './dto/show-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post() // -> /users/\n  @ResponseMessage('Create a user')\n  create(\n    // @Body('email') email: string,\n    // @Body('password') password: string,\n    // @Body('name') name: string,\n    @Body() createUserDto: CreateUserDto,\n    @User() user: IUser,\n  ) {\n    return this.usersService.create(createUserDto, user);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get a user')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n  // @UseGuards(TestGuard)\n  @Get()\n  @ResponseMessage('Fetch List User with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.usersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Patch()\n  @ResponseMessage('Update a user')\n  update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n    return this.usersService.update(updateUserDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a user')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUserName\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto, userCreated: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userCreated\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUserName\n                        \n                    \n                \n            \n            \n                \nfindOneByUserName(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hashPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:160\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport { genSaltSync, hashSync, compareSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interface';\nimport { ShowUserDto } from './dto/show-user.dto';\nimport aqp from 'api-query-params';\nimport { USER_ROLE } from 'src/databases/sample';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n  ) {}\n\n  async register(registerUserDto: RegisterUserDto) {\n    const isExist = await this.userModel.findOne({\n      email: registerUserDto.email,\n    });\n    if (isExist) {\n      throw new BadRequestException(\n        `Email ${registerUserDto.email} is already exits in system , Pls use another email`,\n      );\n    }\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n    const hashPassword = this.getHashPassword(registerUserDto.password);\n    let user = await this.userModel.create({\n      ...registerUserDto,\n      password: hashPassword,\n      role: userRole._id,\n    });\n    return {\n      _id: user._id,\n      createdAt: user.createdAt,\n    };\n  }\n  getHashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    const hash = hashSync(password, salt);\n    return hash;\n  };\n  async create(createUserDto: CreateUserDto, userCreated: IUser) {\n    const isExist = await this.userModel.findOne({\n      email: createUserDto.email,\n    });\n    if (isExist) {\n      throw new BadRequestException(\n        `Email ${createUserDto.email} is already exits in system , Pls use another email`,\n      );\n    }\n    const hashPassword = this.getHashPassword(createUserDto.password);\n    let user = await this.userModel.create({\n      ...createUserDto,\n      password: hashPassword,\n      createdBy: {\n        _id: userCreated._id,\n        email: userCreated.email,\n      },\n    });\n    return {\n      _id: user.id,\n      createdAt: user.createdAt,\n    };\n  }\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.userModel\n      .find(filter)\n      .select('-password')\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not Found User';\n    }\n\n    // Exclude the password field using `.select()`\n    const user = (\n      await this.userModel.findOne({ _id: id }).select('-password')\n    ).populate({ path: 'role', select: { name: 1, _id: 1 } });\n    return user;\n  }\n\n  findOneByUserName(username: string) {\n    return this.userModel\n      .findOne({\n        email: username,\n      })\n      .populate({ path: 'role', select: { name: 1 } });\n  }\n\n  isValidPassword(password: string, hashPassword: string) {\n    return compareSync(password, hashPassword); // true\n  }\n\n  async update(updateUserDto: UpdateUserDto, user: IUser) {\n    return await this.userModel.updateOne(\n      {\n        _id: updateUserDto._id,\n      },\n      {\n        ...updateUserDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    //\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not Found User';\n    }\n    const foundUser = await this.userModel.findById(id);\n\n    if (foundUser && foundUser.email === 'admin@gmail.com') {\n      throw new BadRequestException('Cannot delete account admin@gmail.com');\n    }\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return this.userModel.softDelete({\n      _id: id,\n    });\n  }\n\n  updateUserToken = async (refreshToken: string, _id: string) => {\n    return await this.userModel.updateOne(\n      {\n        _id,\n      },\n      {\n        refreshToken,\n      },\n    );\n  };\n  findUserByToken = async (refreshToken: string) => {\n    return await this.userModel.findOne({ refreshToken }).populate({\n      path: 'role',\n      select: { name: 1 },\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/show-user.dto.ts\n            \n            class\n            ShowUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/test.guard.ts\n            \n            guard\n            TestGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/common : 10.0.3\n        \n            @nestjs/config : 3.0.0\n        \n            @nestjs/core : 10.0.3\n        \n            @nestjs/jwt : 10.1.0\n        \n            @nestjs/mapped-types : 2.0.2\n        \n            @nestjs/mongoose : 10.0.0\n        \n            @nestjs/passport : 10.0.0\n        \n            @nestjs/platform-express : 10.0.3\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : 7.0.4\n        \n            @nestjs/terminus : 10.0.1\n        \n            @nestjs/throttler : ^4.1.0\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.0\n        \n            cookie-parser : 1.4.6\n        \n            ejs : 3.1.9\n        \n            handlebars : 4.7.7\n        \n            helmet : ^7.0.0\n        \n            mongoose : 7.3.1\n        \n            ms : 2.1.3\n        \n            nodemailer : 6.9.3\n        \n            passport : 0.6.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.8.1\n        \n            soft-delete-plugin-mongoose : 1.0.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\n$ npm installCompile and run the project\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\n$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : https://hoidanit.com.vn/\n        \n            License : UNLICENSED\n        \n            Author : Hỏi Dân IT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '648ab415f4328bd3153ee211',\n    name: 'Get Company with paginate',\n    apiPath: '/api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n  },\n  {\n    _id: '648ab436f4328bd3153ee216',\n    name: 'Create Company',\n    apiPath: '/api/v1/companies',\n    method: 'POST',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:48:22.224Z',\n    updatedAt: '2023-06-15T06:48:22.224Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4d5f4328bd3153ee21b',\n    name: 'Update Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:01.241Z',\n    updatedAt: '2023-06-15T06:51:01.241Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4ebf4328bd3153ee220',\n    name: 'Delete Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'DELETE',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:23.973Z',\n    updatedAt: '2023-06-15T06:51:23.973Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab5a8072f2a2ef910638d',\n    name: 'Get Company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:54:32.799Z',\n    updatedAt: '2023-06-15T06:54:32.799Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6d3fa16b294212e4033',\n    name: 'Create User',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:31.898Z',\n    updatedAt: '2023-06-15T06:59:31.898Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6e7fa16b294212e4038',\n    name: 'Get User by Id',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:51.041Z',\n    updatedAt: '2023-06-15T06:59:51.041Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6fdfa16b294212e403d',\n    name: 'Get User with paginate',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:13.364Z',\n    updatedAt: '2023-06-15T07:00:13.364Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab719fa16b294212e4042',\n    name: 'Update User',\n    apiPath: '/api/v1/users/:id',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:41.934Z',\n    updatedAt: '2023-06-15T07:00:41.934Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab728fa16b294212e4047',\n    name: 'Delete User',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:56.274Z',\n    updatedAt: '2023-06-15T07:00:56.274Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab750fa16b294212e404c',\n    name: 'Upload Single File',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad488dafdb9754f40b846',\n    name: 'Create a Job',\n    apiPath: '/api/v1/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:16.508Z',\n    updatedAt: '2023-06-15T09:06:16.508Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad499dafdb9754f40b84b',\n    name: 'Get a job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:33.697Z',\n    updatedAt: '2023-06-15T09:06:33.697Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4a6dafdb9754f40b850',\n    name: 'Update a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'PATCH',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:46.085Z',\n    updatedAt: '2023-06-15T09:06:46.085Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4ccdafdb9754f40b859',\n    name: 'Get Job with paginate',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:24.175Z',\n    updatedAt: '2023-06-15T09:07:24.175Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4d9dafdb9754f40b85e',\n    name: 'Delete a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:37.896Z',\n    updatedAt: '2023-06-15T09:07:37.896Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4fedafdb9754f40b863',\n    name: 'Create a Resume',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:14.659Z',\n    updatedAt: '2023-06-15T09:08:14.659Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad511dafdb9754f40b868',\n    name: 'Fetch resume with paginate',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:33.395Z',\n    updatedAt: '2023-06-15T09:08:33.395Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad522dafdb9754f40b86d',\n    name: 'Get resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:50.801Z',\n    updatedAt: '2023-06-15T09:08:50.801Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad53bdafdb9754f40b872',\n    name: 'Delete a resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad555dafdb9754f40b877',\n    name: 'Update resume status',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:41.694Z',\n    updatedAt: '2023-06-15T09:09:41.694Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad56ddafdb9754f40b87c',\n    name: 'Fetch resumes by user',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad59adafdb9754f40b881',\n    name: 'Create a permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:50.946Z',\n    updatedAt: '2023-06-15T09:10:50.946Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5aedafdb9754f40b886',\n    name: 'Fetch Permission with paginate',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:10.914Z',\n    updatedAt: '2023-06-15T09:11:10.914Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5c5dafdb9754f40b88b',\n    name: 'Fetch permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:33.234Z',\n    updatedAt: '2023-06-15T09:11:33.234Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5d4dafdb9754f40b890',\n    name: 'Update a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:48.081Z',\n    updatedAt: '2023-06-15T09:11:48.081Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5ebdafdb9754f40b895',\n    name: 'Delete a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:11.323Z',\n    updatedAt: '2023-06-15T09:12:11.323Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad613dafdb9754f40b89a',\n    name: 'Create Role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad622dafdb9754f40b89f',\n    name: 'Fetch roles with paginate',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad630dafdb9754f40b8a6',\n    name: 'Fetch role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad640dafdb9754f40b8ab',\n    name: 'Update Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad650dafdb9754f40b8b0',\n    name: 'Delete a Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL_USER'\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n\n    return data ? user?.[data] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
